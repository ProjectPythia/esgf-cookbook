{"version":2,"kind":"Notebook","sha256":"906f5b8e07a11440bb18a8cc8345b3fd019663188e817663d1bdc625d4259a17","slug":"notebooks.complex-search2-and-analysis","location":"/notebooks/complex-search2-and-analysis.ipynb","dependencies":[],"frontmatter":{"title":"Complex Searching with intake and analysing employing xarray","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/esgf-cookbook","copyright":"2023","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/esgf-cookbook/blob/HEAD/notebooks/complex-search2-and-analysis.ipynb","thumbnail":"/esgf-cookbook/_preview/48/build/esgf2-us-9a1c13e846b112ab3d6339bfb7313489.png","exports":[{"format":"ipynb","filename":"complex-search2-and-analysis.ipynb","url":"/esgf-cookbook/_preview/48/build/complex-search2-and--f565eb7ea3fa04a4411d8624543e11d5.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/esgf-cookbook/_preview/48/build/esgf2-us-9a1c13e846b112ab3d6339bfb7313489.png","alt":"ESGF logo","key":"rz43WIueWf","urlSource":"images/logos/esgf2-us.png"}],"key":"DEngsLhnhs"}],"visibility":"show","key":"wkGvdCYu7j"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Complex Searching with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zfbVMyf3cA"},{"type":"inlineCode","value":"intake","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jgr6F8ccp5"},{"type":"text","value":" and analysing employing ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XXRYDxbwut"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cSSDdpluC3"}],"identifier":"complex-searching-with-intake-and-analysing-employing-xarray","label":"Complex Searching with intake and analysing employing xarray","html_id":"complex-searching-with-intake-and-analysing-employing-xarray","implicit":true,"key":"Cd4DSbcNyh"},{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TnzNWs04l4"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"mip6HGdXwv"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This tutorial we will present access multiple historical (as an example here) data available and analyze  using ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kg2Hh9DhGY"},{"type":"inlineCode","value":"intake","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ryLac1EduO"},{"type":"text","value":". Put them in a dictionary format employing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"REwbqaf660"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TGkBdIuN42"},{"type":"text","value":" and plotting simple area average time series over a specific region.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jWewW6myYV"}],"key":"eclc31McYR"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"yQlttEvLZN"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"jLCWN3G01a"}],"key":"oJHDjNFhny"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import warnings\nimport intake\nfrom distributed import Client\nfrom matplotlib import pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport xarray as xr\nimport dask\nxr.set_options(display_style='html')\nwarnings.filterwarnings(\"ignore\")","visibility":"show","key":"NgC9zkztx1"},{"type":"output","id":"-ey1m5ASA2bwY3adFLoqR","data":[],"visibility":"show","key":"xCPDDInLTc"}],"visibility":"show","key":"A7KeH2uCiO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cat_url = \"https://storage.googleapis.com/cmip6/pangeo-cmip6.json\"\ncol = intake.open_esm_datastore(cat_url)\ncol","key":"SHy0YW44Wd"},{"type":"output","id":"ijAeolpA4CpJ7FoPUJRvv","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>pangeo-cmip6 catalog with 7674 dataset(s) from 514818 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>activity_id</th>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>institution_id</th>\n      <td>36</td>\n    </tr>\n    <tr>\n      <th>source_id</th>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>experiment_id</th>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>member_id</th>\n      <td>657</td>\n    </tr>\n    <tr>\n      <th>table_id</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>variable_id</th>\n      <td>700</td>\n    </tr>\n    <tr>\n      <th>grid_label</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>zstore</th>\n      <td>514818</td>\n    </tr>\n    <tr>\n      <th>dcpp_init_year</th>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>version</th>\n      <td>736</td>\n    </tr>\n    <tr>\n      <th>derived_variable_id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"zwXPe1EjkR"}],"key":"j9dNuIYGxA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cat = col.search(experiment_id=[\"historical\"],\n    variable_id = [\"tas\"],\n    member_id = [\"r1i1p1f1\"],\n    table_id = [\"Amon\",], \n    source_id = [ \"CMCC-ESM2\", \"CanESM5\", \"CESM2\", \"CESM2-FV2\", ]\n)","key":"ejOyyTGILI"},{"type":"output","id":"oPG3ZpoZxtwzSQRiktVKE","data":[],"key":"lWYoB0wTYa"}],"key":"W1PO44pEa7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cat.df","key":"Y547vD5nbS"},{"type":"output","id":"hNiJfn3FMGK3Y2iKWvFsc","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"  activity_id institution_id  source_id experiment_id member_id table_id  \\\n0        CMIP           NCAR      CESM2    historical  r1i1p1f1     Amon   \n1        CMIP          CCCma    CanESM5    historical  r1i1p1f1     Amon   \n2        CMIP           NCAR  CESM2-FV2    historical  r1i1p1f1     Amon   \n3        CMIP           CMCC  CMCC-ESM2    historical  r1i1p1f1     Amon   \n\n  variable_id grid_label                                             zstore  \\\n0         tas         gn  gs://cmip6/CMIP6/CMIP/NCAR/CESM2/historical/r1...   \n1         tas         gn  gs://cmip6/CMIP6/CMIP/CCCma/CanESM5/historical...   \n2         tas         gn  gs://cmip6/CMIP6/CMIP/NCAR/CESM2-FV2/historica...   \n3         tas         gn  gs://cmip6/CMIP6/CMIP/CMCC/CMCC-ESM2/historica...   \n\n   dcpp_init_year   version  \n0             NaN  20190308  \n1             NaN  20190429  \n2             NaN  20191120  \n3             NaN  20210114  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>activity_id</th>\n      <th>institution_id</th>\n      <th>source_id</th>\n      <th>experiment_id</th>\n      <th>member_id</th>\n      <th>table_id</th>\n      <th>variable_id</th>\n      <th>grid_label</th>\n      <th>zstore</th>\n      <th>dcpp_init_year</th>\n      <th>version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CMIP</td>\n      <td>NCAR</td>\n      <td>CESM2</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>gs://cmip6/CMIP6/CMIP/NCAR/CESM2/historical/r1...</td>\n      <td>NaN</td>\n      <td>20190308</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CMIP</td>\n      <td>CCCma</td>\n      <td>CanESM5</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>gs://cmip6/CMIP6/CMIP/CCCma/CanESM5/historical...</td>\n      <td>NaN</td>\n      <td>20190429</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CMIP</td>\n      <td>NCAR</td>\n      <td>CESM2-FV2</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>gs://cmip6/CMIP6/CMIP/NCAR/CESM2-FV2/historica...</td>\n      <td>NaN</td>\n      <td>20191120</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CMIP</td>\n      <td>CMCC</td>\n      <td>CMCC-ESM2</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>gs://cmip6/CMIP6/CMIP/CMCC/CMCC-ESM2/historica...</td>\n      <td>NaN</td>\n      <td>20210114</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"nEuezpgIE5"}],"key":"diPxip664J"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dset_dict = cat.to_dataset_dict(zarr_kwargs={'consolidated': True})\nlist(dset_dict.keys())","key":"zWbw1O57m8"},{"type":"output","id":"MQdmbjO1ZvT4eurZQ5ldc","data":[{"output_type":"stream","name":"stdout","text":"\n--> The keys in the returned dictionary of datasets are constructed as follows:\n\t'activity_id.institution_id.source_id.experiment_id.table_id.grid_label'\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n    <div>\n      <progress value='0' class='' max='4' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      \n    </div>\n    ","content_type":"text/html"}}},{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"['CMIP.NCAR.CESM2-FV2.historical.Amon.gn',\n 'CMIP.NCAR.CESM2.historical.Amon.gn',\n 'CMIP.CMCC.CMCC-ESM2.historical.Amon.gn',\n 'CMIP.CCCma.CanESM5.historical.Amon.gn']","content_type":"text/plain"}}}],"key":"S2Z89sgZv7"}],"key":"t6M8TFGJeD"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds = {}\n\nfor key in dset_dict.keys():\n    # Sort the dataset by time\n    sorted_dataset = dset_dict[key].sortby(\"time\")\n    \n    # Subset data for years 1900-2000\n    ds[key] = sorted_dataset.sel(time=slice(\"1900\", \"2000\"))\n        \n    # Optional: Print a message indicating dataset processing\n    print(f\"Processing dataset: {key}\")\n","visibility":"show","key":"olSDknqeYX"},{"type":"output","id":"8vvFDn5gGleCBIWnNtLne","data":[{"output_type":"stream","name":"stdout","text":"Processing dataset: CMIP.NCAR.CESM2-FV2.historical.Amon.gn\nProcessing dataset: CMIP.NCAR.CESM2.historical.Amon.gn\nProcessing dataset: CMIP.CMCC.CMCC-ESM2.historical.Amon.gn\nProcessing dataset: CMIP.CCCma.CanESM5.historical.Amon.gn\n"}],"visibility":"show","key":"Gz0oX0wqlF"}],"visibility":"show","key":"MrTqstdjmq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"ds","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KKNdLsbNV2"},{"type":"text","value":" now contains subset of datasets for each key in dset_dict","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s74UMbdoiV"}],"key":"D0L0qKnm09"}],"key":"h2zB3mze4y"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s check ds","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zbmIPf9zHR"}],"key":"BD7a9AvNpI"}],"key":"fUJwsFslas"}],"key":"v0Wq6OeWAm"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds","visibility":"show","key":"chmxnAzfWT"},{"type":"output","id":"jBsGftk2B2ThpnVLdow__","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"{'CMIP.NCAR.CESM2-FV2.historical.Amon.gn': <xarray.Dataset> Size: 67MB\n Dimensions:         (lat: 96, nbnd: 2, lon: 144, member_id: 1,\n                      dcpp_init_year: 1, time: 1212)\n Coordinates:\n   * lat             (lat) float64 768B -90.0 -88.11 -86.21 ... 86.21 88.11 90.0\n     lat_bnds        (lat, nbnd) float64 2kB dask.array<chunksize=(96, 2), meta=np.ndarray>\n   * lon             (lon) float64 1kB 0.0 2.5 5.0 7.5 ... 352.5 355.0 357.5\n     lon_bnds        (lon, nbnd) float64 2kB dask.array<chunksize=(144, 2), meta=np.ndarray>\n   * time            (time) object 10kB 1900-01-15 12:00:00 ... 2000-12-15 12:...\n     time_bnds       (time, nbnd) object 19kB dask.array<chunksize=(1212, 2), meta=np.ndarray>\n   * member_id       (member_id) object 8B 'r1i1p1f1'\n   * dcpp_init_year  (dcpp_init_year) float64 8B nan\n Dimensions without coordinates: nbnd\n Data variables:\n     tas             (member_id, dcpp_init_year, time, lat, lon) float32 67MB dask.array<chunksize=(1, 1, 390, 96, 144), meta=np.ndarray>\n Attributes: (12/61)\n     Conventions:                      CF-1.7 CMIP-6.2\n     activity_id:                      CMIP\n     branch_method:                    standard\n     branch_time_in_child:             674885.0\n     branch_time_in_parent:            10950.0\n     case_id:                          1559\n     ...                               ...\n     intake_esm_attrs:variable_id:     tas\n     intake_esm_attrs:grid_label:      gn\n     intake_esm_attrs:zstore:          gs://cmip6/CMIP6/CMIP/NCAR/CESM2-FV2/hi...\n     intake_esm_attrs:version:         20191120\n     intake_esm_attrs:_data_format_:   zarr\n     intake_esm_dataset_key:           CMIP.NCAR.CESM2-FV2.historical.Amon.gn,\n 'CMIP.NCAR.CESM2.historical.Amon.gn': <xarray.Dataset> Size: 268MB\n Dimensions:         (lat: 192, nbnd: 2, lon: 288, member_id: 1,\n                      dcpp_init_year: 1, time: 1212)\n Coordinates:\n   * lat             (lat) float64 2kB -90.0 -89.06 -88.12 ... 88.12 89.06 90.0\n     lat_bnds        (lat, nbnd) float32 2kB dask.array<chunksize=(192, 2), meta=np.ndarray>\n   * lon             (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 356.2 357.5 358.8\n     lon_bnds        (lon, nbnd) float32 2kB dask.array<chunksize=(288, 2), meta=np.ndarray>\n   * time            (time) object 10kB 1900-01-15 12:00:00 ... 2000-12-15 12:...\n     time_bnds       (time, nbnd) object 19kB dask.array<chunksize=(1212, 2), meta=np.ndarray>\n   * member_id       (member_id) object 8B 'r1i1p1f1'\n   * dcpp_init_year  (dcpp_init_year) float64 8B nan\n Dimensions without coordinates: nbnd\n Data variables:\n     tas             (member_id, dcpp_init_year, time, lat, lon) float32 268MB dask.array<chunksize=(1, 1, 600, 192, 288), meta=np.ndarray>\n Attributes: (12/61)\n     Conventions:                      CF-1.7 CMIP-6.2\n     activity_id:                      CMIP\n     branch_method:                    standard\n     branch_time_in_child:             674885.0\n     branch_time_in_parent:            219000.0\n     case_id:                          15\n     ...                               ...\n     intake_esm_attrs:variable_id:     tas\n     intake_esm_attrs:grid_label:      gn\n     intake_esm_attrs:zstore:          gs://cmip6/CMIP6/CMIP/NCAR/CESM2/histor...\n     intake_esm_attrs:version:         20190308\n     intake_esm_attrs:_data_format_:   zarr\n     intake_esm_dataset_key:           CMIP.NCAR.CESM2.historical.Amon.gn,\n 'CMIP.CMCC.CMCC-ESM2.historical.Amon.gn': <xarray.Dataset> Size: 268MB\n Dimensions:         (lat: 192, bnds: 2, lon: 288, member_id: 1,\n                      dcpp_init_year: 1, time: 1212)\n Coordinates:\n     height          float64 8B ...\n   * lat             (lat) float64 2kB -90.0 -89.06 -88.12 ... 88.12 89.06 90.0\n     lat_bnds        (lat, bnds) float64 3kB dask.array<chunksize=(192, 2), meta=np.ndarray>\n   * lon             (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 356.2 357.5 358.8\n     lon_bnds        (lon, bnds) float64 5kB dask.array<chunksize=(288, 2), meta=np.ndarray>\n   * time            (time) object 10kB 1900-01-16 12:00:00 ... 2000-12-16 12:...\n     time_bnds       (time, bnds) object 19kB dask.array<chunksize=(1212, 2), meta=np.ndarray>\n   * member_id       (member_id) object 8B 'r1i1p1f1'\n   * dcpp_init_year  (dcpp_init_year) float64 8B nan\n Dimensions without coordinates: bnds\n Data variables:\n     tas             (member_id, dcpp_init_year, time, lat, lon) float32 268MB dask.array<chunksize=(1, 1, 208, 192, 288), meta=np.ndarray>\n Attributes: (12/64)\n     Conventions:                      CF-1.7 CMIP-6.2\n     activity_id:                      CMIP\n     branch_method:                    standard\n     branch_time_in_child:             0.0\n     branch_time_in_parent:            0.0\n     cmor_version:                     3.6.0\n     ...                               ...\n     intake_esm_attrs:variable_id:     tas\n     intake_esm_attrs:grid_label:      gn\n     intake_esm_attrs:zstore:          gs://cmip6/CMIP6/CMIP/CMCC/CMCC-ESM2/hi...\n     intake_esm_attrs:version:         20210114\n     intake_esm_attrs:_data_format_:   zarr\n     intake_esm_dataset_key:           CMIP.CMCC.CMCC-ESM2.historical.Amon.gn,\n 'CMIP.CCCma.CanESM5.historical.Amon.gn': <xarray.Dataset> Size: 40MB\n Dimensions:         (lat: 64, bnds: 2, lon: 128, member_id: 1,\n                      dcpp_init_year: 1, time: 1212)\n Coordinates:\n     height          float64 8B ...\n   * lat             (lat) float64 512B -87.86 -85.1 -82.31 ... 82.31 85.1 87.86\n     lat_bnds        (lat, bnds) float64 1kB dask.array<chunksize=(64, 2), meta=np.ndarray>\n   * lon             (lon) float64 1kB 0.0 2.812 5.625 ... 351.6 354.4 357.2\n     lon_bnds        (lon, bnds) float64 2kB dask.array<chunksize=(128, 2), meta=np.ndarray>\n   * time            (time) object 10kB 1900-01-16 12:00:00 ... 2000-12-16 12:...\n     time_bnds       (time, bnds) object 19kB dask.array<chunksize=(1212, 2), meta=np.ndarray>\n   * member_id       (member_id) object 8B 'r1i1p1f1'\n   * dcpp_init_year  (dcpp_init_year) float64 8B nan\n Dimensions without coordinates: bnds\n Data variables:\n     tas             (member_id, dcpp_init_year, time, lat, lon) float32 40MB dask.array<chunksize=(1, 1, 600, 64, 128), meta=np.ndarray>\n Attributes: (12/69)\n     CCCma_model_hash:                 3dedf95315d603326fde4f5340dc0519d80d10c0\n     CCCma_parent_runid:               rc3-pictrl\n     CCCma_pycmor_hash:                33c30511acc319a98240633965a04ca99c26427e\n     CCCma_runid:                      rc3.1-his01\n     Conventions:                      CF-1.7 CMIP-6.2\n     YMDH_branch_time_in_child:        1850:01:01:00\n     ...                               ...\n     intake_esm_attrs:variable_id:     tas\n     intake_esm_attrs:grid_label:      gn\n     intake_esm_attrs:zstore:          gs://cmip6/CMIP6/CMIP/CCCma/CanESM5/his...\n     intake_esm_attrs:version:         20190429\n     intake_esm_attrs:_data_format_:   zarr\n     intake_esm_dataset_key:           CMIP.CCCma.CanESM5.historical.Amon.gn}","content_type":"text/plain"}}}],"visibility":"show","key":"mADzQNpmz3"}],"visibility":"show","key":"XnD7xGAmwi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate regional mean for each dataset and visualizing time series","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JyzaBD0AVv"}],"identifier":"calculate-regional-mean-for-each-dataset-and-visualizing-time-series","label":"Calculate regional mean for each dataset and visualizing time series","html_id":"calculate-regional-mean-for-each-dataset-and-visualizing-time-series","implicit":true,"key":"SE20ZGyKDz"}],"key":"fmXuv31rcK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"regn_mean = {} \nfor key in dset_dict.keys():\n    regn_mean[key] = ds[key]['tas'].sel(lon=slice(65, 100), lat=slice(5, 25)).mean(dim=['lon', 'lat']).squeeze()\n","key":"cnJsgNICVz"},{"type":"output","id":"UuVz8Cgz3bG7f4vNfmOvJ","data":[],"key":"Xie6bz97Sl"}],"key":"VIZqF7u0nw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"regn_mean","visibility":"show","key":"lQ6t1tfoWi"},{"type":"output","id":"kG7CzLc7v6qsVDpPswad_","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"{'CMIP.NCAR.CESM2-FV2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 1212)> Size: 5kB\n dask.array<getitem, shape=(1212,), dtype=float32, chunksize=(822,), chunktype=numpy.ndarray>\n Coordinates:\n   * time            (time) object 10kB 1900-01-15 12:00:00 ... 2000-12-15 12:...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan,\n 'CMIP.NCAR.CESM2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 1212)> Size: 5kB\n dask.array<getitem, shape=(1212,), dtype=float32, chunksize=(600,), chunktype=numpy.ndarray>\n Coordinates:\n   * time            (time) object 10kB 1900-01-15 12:00:00 ... 2000-12-15 12:...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan,\n 'CMIP.CMCC.CMCC-ESM2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 1212)> Size: 5kB\n dask.array<getitem, shape=(1212,), dtype=float32, chunksize=(404,), chunktype=numpy.ndarray>\n Coordinates:\n     height          float64 8B ...\n   * time            (time) object 10kB 1900-01-16 12:00:00 ... 2000-12-16 12:...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan,\n 'CMIP.CCCma.CanESM5.historical.Amon.gn': <xarray.DataArray 'tas' (time: 1212)> Size: 5kB\n dask.array<getitem, shape=(1212,), dtype=float32, chunksize=(600,), chunktype=numpy.ndarray>\n Coordinates:\n     height          float64 8B ...\n   * time            (time) object 10kB 1900-01-16 12:00:00 ... 2000-12-16 12:...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan}","content_type":"text/plain"}}}],"visibility":"show","key":"Wly08yAkA6"}],"visibility":"show","key":"hu76K5kNvM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"plt.rcParams['figure.figsize'] = [15, 4]\nplt.rcParams['lines.linewidth'] = 2\nplt.rcParams['font.size'] = 10\nplt.rcParams['font.weight'] = 'bold'\n","visibility":"show","key":"lUURkbC9nH"},{"type":"output","id":"ONMWrROIfeJO0AGzatwe1","data":[],"visibility":"show","key":"fieU7zVNqQ"}],"visibility":"show","key":"Zm3qhdZ79O"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualizing the regional mean for each dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"anioGcBOLY"}],"identifier":"visualizing-the-regional-mean-for-each-dataset","label":"Visualizing the regional mean for each dataset","html_id":"visualizing-the-regional-mean-for-each-dataset","implicit":true,"key":"dKYrOZQxfe"}],"visibility":"show","key":"kjE4I4x6NT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"for key, regm in regn_mean.items():\n    source_id = key.split('.')[2]\n    regm.plot(label=source_id)\n    plt.title(f\"Mean Surface Air Temperature for {source_id}\")\n    plt.xlabel('Time')\n    plt.ylabel('Temperature (K)')\n    plt.legend()\n    plt.show()","key":"zGtlnS6Rto"},{"type":"output","id":"MGkFo-zyB1-KPVaa0EJqC","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1664e1c18e14a5f886e6ada902e7b8ba","path":"/esgf-cookbook/_preview/48/build/1664e1c18e14a5f886e6ada902e7b8ba.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"346043f757e963ef3ec5f26d3c34f8ff","path":"/esgf-cookbook/_preview/48/build/346043f757e963ef3ec5f26d3c34f8ff.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5a88bdc3a25cfca64abd9b4fff64600b","path":"/esgf-cookbook/_preview/48/build/5a88bdc3a25cfca64abd9b4fff64600b.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"98178ac663fa1b1efba1ad201c15ab56","path":"/esgf-cookbook/_preview/48/build/98178ac663fa1b1efba1ad201c15ab56.png"}}}],"key":"wmuiT4qo78"}],"key":"fLS7ORBJ7g"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculating annual mean for each dataset  and visualizing time series","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yIG3oaieNU"}],"identifier":"calculating-annual-mean-for-each-dataset-and-visualizing-time-series","label":"Calculating annual mean for each dataset  and visualizing time series","html_id":"calculating-annual-mean-for-each-dataset-and-visualizing-time-series","implicit":true,"key":"FmL3GcgEUY"}],"key":"QWhxrhbYRs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"annual_mean = {}\nfor key, regm in regn_mean.items():\n    annual_mean[key] = regm.resample(time='Y').mean()\n","key":"VUCj88j0I9"},{"type":"output","id":"n9arYRw2otucleGmCQUM9","data":[],"key":"OmjAiNN59t"}],"key":"koJjjBQZTY"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"annual_mean","visibility":"show","key":"MGcROgbOBv"},{"type":"output","id":"vrcOZiL9vLQVbDird_5xM","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"{'CMIP.NCAR.CESM2-FV2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 101)> Size: 404B\n dask.array<stack, shape=(101,), dtype=float32, chunksize=(1,), chunktype=numpy.ndarray>\n Coordinates:\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan\n   * time            (time) object 808B 1900-12-31 00:00:00 ... 2000-12-31 00:...,\n 'CMIP.NCAR.CESM2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 101)> Size: 404B\n dask.array<stack, shape=(101,), dtype=float32, chunksize=(1,), chunktype=numpy.ndarray>\n Coordinates:\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan\n   * time            (time) object 808B 1900-12-31 00:00:00 ... 2000-12-31 00:...,\n 'CMIP.CMCC.CMCC-ESM2.historical.Amon.gn': <xarray.DataArray 'tas' (time: 101)> Size: 404B\n dask.array<stack, shape=(101,), dtype=float32, chunksize=(1,), chunktype=numpy.ndarray>\n Coordinates:\n     height          float64 8B ...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan\n   * time            (time) object 808B 1900-12-31 00:00:00 ... 2000-12-31 00:...,\n 'CMIP.CCCma.CanESM5.historical.Amon.gn': <xarray.DataArray 'tas' (time: 101)> Size: 404B\n dask.array<stack, shape=(101,), dtype=float32, chunksize=(1,), chunktype=numpy.ndarray>\n Coordinates:\n     height          float64 8B ...\n     member_id       <U8 32B 'r1i1p1f1'\n     dcpp_init_year  float64 8B nan\n   * time            (time) object 808B 1900-12-31 00:00:00 ... 2000-12-31 00:...}","content_type":"text/plain"}}}],"visibility":"show","key":"KftcdXcgnv"}],"visibility":"show","key":"Tmu7zl2T5h"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualizing the regional annual mean for each dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GmGU7HiZh7"}],"identifier":"visualizing-the-regional-annual-mean-for-each-dataset","label":"Visualizing the regional annual mean for each dataset","html_id":"visualizing-the-regional-annual-mean-for-each-dataset","implicit":true,"key":"hzf9TZ8C6O"}],"key":"saEFvmqKVo"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for key, anmn in annual_mean.items():\n    source_id = key.split('.')[2]\n    anmn.plot(label=source_id)\n    plt.title(f\"Mean Annual Surface Air Temperature for {source_id}\")\n    plt.xlabel('Time')\n    plt.ylabel('Temperature (K)')\n    plt.legend()\n    plt.show()","visibility":"show","key":"lopLhriQ5a"},{"type":"output","id":"JBiI4sGtVzMo6wKYZRPO8","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"d86f07d6d6205f58f05261a60b0e9ae4","path":"/esgf-cookbook/_preview/48/build/d86f07d6d6205f58f05261a60b0e9ae4.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"83c4968e5e271696b243f74117550048","path":"/esgf-cookbook/_preview/48/build/83c4968e5e271696b243f74117550048.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"9e011e4de5d63cd241f3daca382d128f","path":"/esgf-cookbook/_preview/48/build/9e011e4de5d63cd241f3daca382d128f.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"76806bc7678d503c85e6bef839fdefce","path":"/esgf-cookbook/_preview/48/build/76806bc7678d503c85e6bef839fdefce.png"}}}],"visibility":"show","key":"aubIURSf3n"}],"visibility":"show","key":"OYVR8sPt20"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualizing the regional annual mean for each dataset in a single panel","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oimyGMRfkn"}],"identifier":"visualizing-the-regional-annual-mean-for-each-dataset-in-a-single-panel","label":"Visualizing the regional annual mean for each dataset in a single panel","html_id":"visualizing-the-regional-annual-mean-for-each-dataset-in-a-single-panel","implicit":true,"key":"qxb6caKRP1"}],"key":"Gi3hQzzL9S"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create the plot\nplt.figure(figsize=(12, 6))\n\n# Plotting the annual mean for each dataset on the same plot\nfor key, annm in annual_mean.items():\n    source_id = key.split('.')[2]\n    annm.plot(label=source_id)\n\nplt.title(\"Annual Mean Surface Air Temperature (Regional)\")\nplt.xlabel('Time')\nplt.ylabel('Temperature (K)')\nplt.legend()\nplt.show()\n","visibility":"show","key":"DJfSxm8cpp"},{"type":"output","id":"PpiALYBVGrUNPFRDsrlZR","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x600 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"505b1b79ccfbb73ddf7f15492cb53470","path":"/esgf-cookbook/_preview/48/build/505b1b79ccfbb73ddf7f15492cb53470.png"}}}],"visibility":"show","key":"t7Ktea6EZW"}],"visibility":"show","key":"xifBRiNiiY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YQD9DEPReM"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"hxRYr6GGpZ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Global Mean Surface Temperature","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zfAcXeh79k"}],"urlSource":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst.html","key":"rgDc6mYwz0"}],"key":"ZOZj8PPR1s"}],"key":"nvdNcRlcj3"}],"key":"kYQrIJhZan"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Demo: Regridding and Plotting with Rooki and Cartopy","url":"/notebooks/ex-regrid-plot","group":"Workflows"}}},"domain":"http://localhost:3000"}