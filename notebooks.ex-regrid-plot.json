{"version":2,"kind":"Notebook","sha256":"af49b1db30fe9319e377b5ff8afe08057f601849c4eb64d85ad3e4febc0e7d4b","slug":"notebooks.ex-regrid-plot","location":"/notebooks/ex-regrid-plot.ipynb","dependencies":[],"frontmatter":{"title":"Demo: Regridding and Plotting with Rooki and Cartopy","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/esgf-cookbook","copyright":"2023","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/esgf-cookbook/blob/main/notebooks/ex-regrid-plot.ipynb","thumbnail":"/esgf-cookbook/build/esgf-0d175e4d5f3c9aa767de1d097348731d.png","exports":[{"format":"ipynb","filename":"ex-regrid-plot.ipynb","url":"/esgf-cookbook/build/ex-regrid-plot-a9119a841a5636ad11c4ce46b6642a18.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"image","url":"/esgf-cookbook/build/esgf-0d175e4d5f3c9aa767de1d097348731d.png","alt":"ESGF logo","width":250,"key":"SDrI5lus9T","urlSource":"images/esgf.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G5336MJACA"},{"type":"image","url":"/esgf-cookbook/build/rooki_logo-44fb1f5d684411488855c3626bbb2caa.png","alt":"Rooki logo","width":125,"key":"roQxwn2rfm","urlSource":"images/logos/rooki_logo.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JiQQLIqSSp"},{"type":"image","url":"/esgf-cookbook/build/cartopy_logo-f77313cfb49b167afe7f9bd12d052edd.png","alt":"Cartopy logo","width":250,"key":"X0W9QX0kzV","urlSource":"images/logos/cartopy_logo.png"}],"key":"QhnmGe83xl"}],"visibility":"show","key":"Q41s2F95F2"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Demo: Regridding and Plotting with Rooki and Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M0bTTHQWQ4"}],"identifier":"demo-regridding-and-plotting-with-rooki-and-cartopy","label":"Demo: Regridding and Plotting with Rooki and Cartopy","html_id":"demo-regridding-and-plotting-with-rooki-and-cartopy","implicit":true,"key":"ixdxNazqYH"}],"visibility":"show","key":"FYTxuLiC8j"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bPfOzkoOEk"}],"visibility":"show","key":"XtfUzfXI6G"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Jyr4vMGZkh"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"LkIFwVR95T"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we demonstrate how to use Rooki to regrid CMIP model data and plot it in Cartopy for two examples:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qIi9qI4hDO"}],"key":"B4vv3QlPv9"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Regrid two CMIP models onto the same grid","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"sQYNDFLlVw"}],"key":"azGTuMJ7ea"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Coarsen the output for one model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"z45lnSXOeq"}],"key":"ufRZFbHQV0"}],"key":"tAK6uHBie2"}],"key":"oZFJqeN0LS"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rVr4dOzU2B"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"pbhFoh1MV5"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dTExc2RMMr"}],"key":"IblWszsbdx"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dDnvzbirU2"}],"key":"pL6xjV0w7p"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x4Q4idQB25"}],"key":"TeChfWk6ET"}],"key":"CO9034nx3E"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to intake-esgf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"D63uG8kpOM"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","key":"ijHpldkqTT"}],"key":"g2NCoKXr0X"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Tyu00bW5Qz"}],"key":"CdhmGqDlQd"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"p2zdPU3T9e"}],"key":"kIRTxxP5KG"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KGYG4wskHL"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"mhxGvGaFmN"}],"key":"nlOV2WnMOZ"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zIhZcUG28i"}],"key":"wC2KQ0uwDS"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"JQ53HfGW6W"}],"key":"qJZr3xkNdh"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Using Rooki to access CMIP6 data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UsEA4QAqDR"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","key":"HyoHr1TtGZ"}],"key":"lJAKnJIZpo"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M9urq8VS1c"}],"key":"UIE3boGB9Q"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Familiarity with rooki","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"A6FijaFS9P"}],"key":"XYDlHkmbWz"}],"key":"AktoSMapWx"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Understanding of NetCDF","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"e2WM105t7s"}],"urlSource":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","key":"S7eijctuOW"}],"key":"yAQrFkDfEq"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"J1oIq298fR"}],"key":"Ab8uvNZhGg"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"p2tXSmw5Hs"}],"key":"rPR5OWJ5ds"}],"key":"j6ZINC78zM"}],"key":"asSeB7awgG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"xySgpyoGvs"}],"key":"HgkuxGbBGb"},{"type":"text","value":": 15 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"dmpsFsCui0"}],"key":"ojkvN8JVjg"}],"key":"WVcpgdM5rz"}],"visibility":"show","key":"edUp3u3bm1"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zI3EByL3XI"}],"key":"mDCVvEUDOX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m4D0EbO4TF"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"r4sXfwpecx"}],"key":"RnKVGSe1Ix"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport intake_esgf\n\n# Run this on the DKRZ node in Germany, using the ESGF1 index node at LLNL\nos.environ[\"ROOK_URL\"] = \"http://rook.dkrz.de/wps\"\nintake_esgf.conf.set(indices={\"anl-dev\": False,\n                               \"ornl-dev\": False,\n                               \"esgf-node.llnl.gov\": True})\n\nimport rooki.operators as ops\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\nimport intake_esgf\nfrom intake_esgf import ESGFCatalog\nfrom rooki import rooki\nfrom matplotlib.gridspec import GridSpec\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes\n","visibility":"show","key":"kXAU7HWafY"},{"type":"output","id":"psru9zyXzBX6u_DdCVEcL","data":[],"visibility":"show","key":"c9XqKHXuIC"}],"visibility":"show","key":"GkUbzIAIyw"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 1: Regrid two CMIP6 models onto the same grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M3Sjc1Nufg"}],"identifier":"example-1-regrid-two-cmip6-models-onto-the-same-grid","label":"Example 1: Regrid two CMIP6 models onto the same grid","html_id":"example-1-regrid-two-cmip6-models-onto-the-same-grid","implicit":true,"key":"vNxGqyO7sB"}],"visibility":"show","key":"WX7K5hSUhz"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we want to compare the historical precipitation output between two CMIP models, CESM2 and CanESM5. Here will will look at the annual mean precipitation for 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ouYMRVUYEl"}],"key":"IuaKQnKXIH"}],"key":"zPwbO0ZKO6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the desired datasets using intake-esgf and rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kx4azX3qqq"}],"identifier":"access-the-desired-datasets-using-intake-esgf-and-rooki","label":"Access the desired datasets using intake-esgf and rooki","html_id":"access-the-desired-datasets-using-intake-esgf-and-rooki","implicit":true,"key":"l5ryOKpW8c"}],"key":"OPC4UZK9M3"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The function and workflow to read in CMPI6 data using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q5wFtOgakf"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pI4b7sVtFB"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uqa9ghWUf4"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nOFrTHh4p2"},{"type":"text","value":" in the next few cells are adapted from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QftsDz6t7T"},{"type":"link","url":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"intake​-esgf​-with​-rooki​.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I3xRTMcqbl"}],"urlSource":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","data":{"kind":"file","org":"ProjectPythia","repo":"esgf-cookbook","reference":"cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9","file":"notebooks/use-intake-esgf-with-rooki.ipynb","raw":"https://raw.githubusercontent.com/ProjectPythia/esgf-cookbook/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb"},"internal":false,"protocol":"github","key":"bW6D3VaJKu"},{"type":"text","value":". Essentially, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MqbCE4RrRM"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oxMFQrDijJ"},{"type":"text","value":" to find the dataset IDs we want and then subset and average them using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IeMx2chU0Y"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w3k1LIhJ4w"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ja9oKf93mT"}],"key":"GUXUGzN08T"}],"visibility":"show","key":"aQw15iWdlM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def separate_dataset_id(id_list):\n    rooki_id = id_list[0]\n    rooki_id = rooki_id.split(\"|\")[0]\n    #rooki_id = f\"css03_data.{rooki_id}\"  # <-- just something you have to know for now :(\n    return rooki_id\n","visibility":"show","key":"BRsPw4eb5z"},{"type":"output","id":"DaCF_cd4M7B8OrOfVXoKk","data":[],"visibility":"show","key":"ULlPRTnUHW"}],"visibility":"show","key":"sG8vMaimrp"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"pr\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\", \"CanESM5\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"ruUgVwsST3"},{"type":"output","id":"bPJhMCBA1pEkseOkVPiTQ","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:79: UserWarning: You have enabled at least one index which uses the old Solr technology. ESGF is moving away from this technology and you may find that some indicesfail to return a response.\n  warnings.warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"   Searching indices:   0%|          |0/2 [       ?index/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"36177797cdac4a35bf7191035589e33c\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:323: UserWarning: SolrESGFIndex('esgf-node.llnl.gov') failed to return a response, results may be incomplete\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"['CMIP6.CMIP.CCCma.CanESM5.historical.r1i1p1f1.Amon.pr.gn.v20190429',\n 'CMIP6.CMIP.NCAR.CESM2.historical.r1i1p1f1.Amon.pr.gn.v20190401']","content_type":"text/plain"}}}],"visibility":"show","key":"Db7ksfz6Kf"}],"visibility":"show","key":"QQPLUI64Mb"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subset the data to get the precipitation variable for 2010 and then average by time:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ndJO9UNm3E"}],"key":"kNQWc94pzT"}],"key":"iethTKUlIz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dset_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Subset(\n            ops.Input('pr', [dset_id]),\n            time='2010/2010'\n        )\n    )\n\n    resp = wf.orchestrate()\n\n    # if it worked, add the dataset to our list\n    if resp.ok:\n        dset_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n","visibility":"show","key":"ODYnQWQ4IK"},{"type":"output","id":"z92rOx_XFRaKmDdnYb6TL","data":[{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_w6nubjnx/pr_Amon_CanESM5_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"},{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_jb1g20di/pr_Amon_CESM2_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"}],"visibility":"show","key":"LG1gsIUoPd"}],"visibility":"show","key":"OXtbaLYkj8"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the dataset list to get an overview of the metadata structure:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KTvzEirBNa"}],"key":"hPc9igfoeg"}],"key":"Ao5Wgzodry"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list)","visibility":"show","key":"rv0ig25ckv"},{"type":"output","id":"hYt22yRayeU40nXUBd7GE","data":[{"output_type":"stream","name":"stdout","text":"[<xarray.Dataset> Size: 37kB\nDimensions:    (time: 1, lat: 64, bnds: 2, lon: 128)\nCoordinates:\n  * lat        (lat) float64 512B -87.86 -85.1 -82.31 ... 82.31 85.1 87.86\n  * lon        (lon) float64 1kB 0.0 2.812 5.625 8.438 ... 351.6 354.4 357.2\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: bnds\nData variables:\n    lat_bnds   (time, lat, bnds) float64 1kB ...\n    lon_bnds   (time, lon, bnds) float64 2kB ...\n    pr         (time, lat, lon) float32 33kB ...\n    time_bnds  (time, bnds) object 16B ...\nAttributes: (12/53)\n    CCCma_model_hash:            3dedf95315d603326fde4f5340dc0519d80d10c0\n    CCCma_parent_runid:          rc3-pictrl\n    CCCma_pycmor_hash:           33c30511acc319a98240633965a04ca99c26427e\n    CCCma_runid:                 rc3.1-his01\n    Conventions:                 CF-1.7 CMIP-6.2\n    YMDH_branch_time_in_child:   1850:01:01:00\n    ...                          ...\n    tracking_id:                 hdl:21.14100/363e1ebe-46e7-43dc-9feb-a7a4a0c...\n    variable_id:                 pr\n    variant_label:               r1i1p1f1\n    version:                     v20190429\n    license:                     CMIP6 model data produced by The Government ...\n    cmor_version:                3.4.0, <xarray.Dataset> Size: 233kB\nDimensions:    (time: 1, lat: 192, lon: 288, nbnd: 2)\nCoordinates:\n  * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n  * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: nbnd\nData variables:\n    pr         (time, lat, lon) float32 221kB ...\n    lat_bnds   (time, lat, nbnd) float64 3kB ...\n    lon_bnds   (time, lon, nbnd) float64 5kB ...\n    time_bnds  (time, nbnd) object 16B ...\nAttributes: (12/45)\n    Conventions:            CF-1.7 CMIP-6.2\n    activity_id:            CMIP\n    branch_method:          standard\n    branch_time_in_child:   674885.0\n    branch_time_in_parent:  219000.0\n    case_id:                15\n    ...                     ...\n    sub_experiment_id:      none\n    table_id:               Amon\n    tracking_id:            hdl:21.14100/a2c2f719-6790-484b-9f66-392e62cd0eb8\n    variable_id:            pr\n    variant_info:           CMIP6 20th century experiments (1850-2014) with C...\n    variant_label:          r1i1p1f1]\n"}],"visibility":"show","key":"z23wWJbCNl"}],"visibility":"show","key":"kZ2nzBJRRE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare the precipitation data between models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sgyEZ8iG12"}],"identifier":"compare-the-precipitation-data-between-models","label":"Compare the precipitation data between models","html_id":"compare-the-precipitation-data-between-models","implicit":true,"key":"nTj1J9OeRL"}],"key":"B4Vhj6b7Q7"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, let’s quickly plot the 2010 annual mean precipitation for each model to see what we’re working with. Since precipitation values vary greatly in magnitude, using a log-normalized colormap makes the data easier to visualize.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cPC8bIYDgx"}],"key":"cTGi99BHUs"}],"key":"JO4AFobMSW"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for dset in dset_list:\n    dset.pr.plot(norm=mcolors.LogNorm())\n    plt.show()","visibility":"show","key":"yfsXqomc9t"},{"type":"output","id":"vgSRs7OrXCMw3Bvo8Qtsc","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b760f393e344a047915437d35449d7c2","path":"/esgf-cookbook/build/b760f393e344a047915437d35449d7c2.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"67a9fc1032f4543e61d9864d1cc4a5fc","path":"/esgf-cookbook/build/67a9fc1032f4543e61d9864d1cc4a5fc.png"}}}],"visibility":"show","key":"LOsdxQiVNT"}],"visibility":"show","key":"IxKzf8VX6Y"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true,"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Uncomment and run the following cell. If we try to take the difference outright, it fails!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kKfzJZ8WIk"}],"key":"OAyPoUXyrg"}],"visibility":"show","key":"l0gnUPyRSY"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# pr_diff = dset_list[0].pr - dset_list[1].pr","visibility":"show","key":"TVmtak0UMG"},{"type":"output","id":"7rX7592wd-rzEaAfDcO2t","data":[],"visibility":"show","key":"p5ERcrBHNE"}],"visibility":"show","key":"bOwlb73HUP"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The models have different grids so we can’t directly subtract the data. We can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OidJBMe9bl"},{"type":"inlineCode","value":"grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G03kyzdBKx"},{"type":"text","value":" attribute to get information on which grid each uses.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IRbdUGFcDa"}],"key":"PAsLJ8dR7x"}],"visibility":"show","key":"zeIFloty9b"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].grid)\nprint(dset_list[1].grid)","visibility":"show","key":"C5fEbJvtIg"},{"type":"output","id":"6c0M5mjq9iaNUWmiv3y7O","data":[{"output_type":"stream","name":"stdout","text":"T63L49 native atmosphere, T63 Linear Gaussian Grid; 128 x 64 longitude/latitude; 49 levels; top level 1 hPa\nnative 0.9x1.25 finite volume grid (192x288 latxlon)\n"}],"visibility":"show","key":"otdnS9ayfG"}],"visibility":"show","key":"FQbkQTGq0S"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Regrid the models onto the same grid with Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k8IhPSmWxS"}],"identifier":"regrid-the-models-onto-the-same-grid-with-rooki","label":"Regrid the models onto the same grid with Rooki","html_id":"regrid-the-models-onto-the-same-grid-with-rooki","implicit":true,"key":"gNSLOfQbgR"}],"key":"VL0uneqgTo"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Look at the documentation on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yUfWyuiDae"},{"type":"inlineCode","value":"regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H0PUI8wbi2"},{"type":"text","value":" operator to see the available grid types and regrid methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Zv2fqvGY3G"}],"key":"DpLCCepuJJ"}],"visibility":"show","key":"lBKTqKCwQa"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rooki.regrid?","visibility":"show","key":"Nb3ggEc5iU"},{"type":"output","id":"WALvQIb6BHSbVs46gPqBm","data":[],"visibility":"show","key":"UBTzybxbbv"}],"visibility":"show","key":"odZ1Yc9CNj"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we’ll do the same process as before to read in and subset the datasets with rooki, but now we ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ElrN3EuopX"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"regrid using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GqGMQodVgb"},{"type":"inlineCode","value":"ops.Regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KfguYTDuES"},{"type":"text","value":" before averaging over time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CchWSZ8iCB"}],"key":"gOhfLhHWCq"},{"type":"text","value":". In this example, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"esn3Jus2rq"},{"type":"inlineCode","value":"method=nearest_s2d","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oKmLee7587"},{"type":"text","value":" to regrid each model onto the target grid using a nearest neighbors method. The target grid is a 1.25° grid, specified by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hQ1h4oTMPY"},{"type":"inlineCode","value":"grid='1pt25deg'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KYCVqRzO5o"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YJ0sv5r0v5"}],"key":"yTWxko8Nk0"}],"visibility":"show","key":"REV64kjm0i"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rg_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Regrid(\n            ops.Subset(\n                ops.Input('pr', [dset_id]),\n                time='2010/2010'\n            ),\n            method='nearest_s2d',\n            grid='1pt25deg'\n        )\n    )\n\n\n    resp = wf.orchestrate()\n    \n    # if it worked, add the regridded dataset to our list\n    if resp.ok:\n        rg_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n        ","visibility":"show","key":"yVFtcLdyYh"},{"type":"output","id":"FHrL6UQ3l7rO107GdF1-b","data":[{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"},{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"}],"visibility":"show","key":"nKETqNCVRL"}],"visibility":"show","key":"hqo2gGrK1m"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the list of regridded datasets to get an overview of the metadata structure. Note how ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D8apAxpQEO"},{"type":"inlineCode","value":"lat","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Dsjul8aXOL"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EHISdhkrBW"},{"type":"inlineCode","value":"lon","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SBn2Do1MiD"},{"type":"text","value":" are now the same and each dataset has additional attributes, including ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mnXCsl3Aai"},{"type":"inlineCode","value":"grid_original","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lnNYbUvZLF"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PvCqhkiO7T"},{"type":"inlineCode","value":"regrid_operation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KFKUdTVSnG"},{"type":"text","value":", which all keep track of the regridding operations we just completed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bGThM3qfiE"}],"key":"DfhG6fazOB"}],"key":"GlCIHtG41N"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list)","visibility":"show","key":"vja1iCJgAF"},{"type":"output","id":"hcWDTA6ZyxkMTqbMJA1MF","data":[{"output_type":"stream","name":"stdout","text":"[[], []]\n"}],"visibility":"show","key":"DrFwZlmhqW"}],"visibility":"show","key":"qhsLjqxU2V"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now they are on the same grid!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CG2lbuTkuw"}],"key":"tLVb9JAf6C"}],"key":"HJFID3uzKa"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list[0].grid)\nprint(rg_list[1].grid)","visibility":"show","key":"SXRp4um5jT"},{"type":"output","id":"erQJ8bnCAwn7k8f9V0_XO","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mAttributeError\u001b[39m                            Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[12]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[43mrg_list\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m0\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m.\u001b[49m\u001b[43mgrid\u001b[49m)\n\u001b[32m      2\u001b[39m \u001b[38;5;28mprint\u001b[39m(rg_list[\u001b[32m1\u001b[39m].grid)\n\n\u001b[31mAttributeError\u001b[39m: 'list' object has no attribute 'grid'","ename":"AttributeError","evalue":"'list' object has no attribute 'grid'"}],"visibility":"show","key":"HbWhwUxsT6"}],"visibility":"show","key":"amm7aHLOkJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quick plot the before and after for each model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VKvNHI8tNL"}],"identifier":"quick-plot-the-before-and-after-for-each-model","label":"Quick plot the before and after for each model","html_id":"quick-plot-the-before-and-after-for-each-model","implicit":true,"key":"Pn0ug3ZHJ0"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The plots largely look the same, as they should - with the nearest neighbors method, we are just shifting the precipitation data onto a different grid without averaging between grid cells.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"szvGJL3xb5"}],"key":"M3svgHmvuW"}],"key":"koUuOjJ6L8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].source_id)\nfor ds in [dset_list[0], rg_list[0]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"FFOJUWLcI8"},{"type":"output","id":"T14Nuw2RwsC1wqO3llhwT","data":[],"visibility":"show","key":"m3JAOX446O"}],"visibility":"show","key":"bnUydnk0Hn"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[1].source_id)\nfor ds in [dset_list[1], rg_list[1]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"vfaklY4KEV"},{"type":"output","id":"6YqYCGtr0HZOqQtbm0oPg","data":[],"visibility":"show","key":"Ne7glOGFDz"}],"visibility":"show","key":"sa87jjLe2A"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Take the difference between precipitation datasets and plot it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IewDxbTLlQ"}],"identifier":"take-the-difference-between-precipitation-datasets-and-plot-it","label":"Take the difference between precipitation datasets and plot it","html_id":"take-the-difference-between-precipitation-datasets-and-plot-it","implicit":true,"key":"WplBp0HgD9"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that both models are on the same grid, we can subtract the precipitation datasets and plot the difference!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Bog4iRZFkS"}],"key":"wQZLEChhpB"}],"key":"uAfJ8P5xtn"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"pr_diff = rg_list[0] - rg_list[1]\n\npr_diff.pr.plot(cmap=\"bwr\")\nplt.show()\n","visibility":"show","key":"vmgKJcnW8G"},{"type":"output","id":"pqW0uYcv6KwbrAntIChhP","data":[],"visibility":"show","key":"q4h9m3Jdpc"}],"visibility":"show","key":"S4WoMUys2V"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot everything together","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HPqwSPiVqZ"}],"identifier":"plot-everything-together","label":"Plot everything together","html_id":"plot-everything-together","implicit":true,"key":"RtmHcjBPVX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot the regridded precipitation data as well as the difference between models on the same figure. We can use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GnnOgwxtkP"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"t5IdHvUZID"},{"type":"text","value":" to make it pretty. With ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fUeoN5f9s5"},{"type":"inlineCode","value":"GridSpec","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vPyTS0ZCBB"},{"type":"text","value":", we can also split up the figure and organize it to use the same colorbar for more than one panel.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"w10T8tqwWl"}],"key":"q5r7co4Qpb"}],"key":"q2j136LqUQ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], hspace=0.2)\n\n# specify the projection\nproj = ccrs.Mollweide()\n\n# set up plots for each model\naxpr_1 = plt.subplot(gs[0, 0], projection=proj)\naxpr_2 = plt.subplot(gs[1, 0], projection=proj)\naxdiff = plt.subplot(gs[2, 0], projection=proj)\n\n# axes where the colorbar will go \naxcb_pr = plt.subplot(gs[:2, 1]) \naxcb_diff = plt.subplot(gs[2, 1])\naxcb_pr.axis(\"off\")\naxcb_diff.axis(\"off\")\n\n# plot the precipitation for both models\nfor i, ax in enumerate([axpr_1, axpr_2]):\n    ds_rg = rg_list[i]\n    pcm = ax.pcolormesh(ds_rg.lon, ds_rg.lat, ds_rg.pr.isel(time=0), norm=mcolors.LogNorm(vmin=1e-7, vmax=3e-4),\n                         transform=ccrs.PlateCarree()\n                       )\n    ax.set_title(ds_rg.parent_source_id)\n    ax.add_feature(cfeature.COASTLINE)\n    \n# now plot the difference\npcmd = axdiff.pcolormesh(pr_diff.lon, pr_diff.lat, pr_diff.pr.isel(time=0), cmap=\"bwr\", vmin=-3e-4, vmax=3e-4,\n                         transform=ccrs.PlateCarree()\n                        )\naxdiff.set_title(\"{a} - {b}\".format(a=rg_list[0].parent_source_id, b=rg_list[1].parent_source_id))\naxdiff.add_feature(cfeature.COASTLINE)\n\n# set the precipitation colorbar\naxcb_pr_ins = inset_axes(axcb_pr, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar_pr = plt.colorbar(pcm, cax=axcb_pr_ins, orientation=\"vertical\", extend=\"both\")\ncbar_pr.set_label(\"{n} ({u})\".format(n=rg_list[0].pr.long_name, u=rg_list[0].pr.units))\n\n# set the difference colorbar\naxcb_diff_ins = inset_axes(axcb_diff, width=\"50%\", height=\"100%\", loc=\"center\")\ncbar_diff = plt.colorbar(pcmd, cax=axcb_diff_ins, orientation=\"vertical\", extend=\"both\")\ncbar_diff.set_label(\"Difference ({u})\".format(u=pr_diff.pr.units))\n\nplt.show()\n","visibility":"show","key":"InkYj7Rbgs"},{"type":"output","id":"WitiSAPNzuS3OeC4C_tJZ","data":[],"visibility":"show","key":"qMEEKUu8jO"}],"visibility":"show","key":"uQMvhJZHUe"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 2: Coarsen the output for one model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IbtLEs2vdY"}],"identifier":"example-2-coarsen-the-output-for-one-model","label":"Example 2: Coarsen the output for one model","html_id":"example-2-coarsen-the-output-for-one-model","implicit":true,"key":"DOcEVubAZP"}],"visibility":"show","key":"yJr3e02ZVC"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JLvauDbgBf"},{"type":"inlineCode","value":"Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uq6l4bSFUY"},{"type":"text","value":" to regrid the data from one model onto a coarser grid. In this case, it may make more sense to use a conservative regridding method, which will conserve the physical fluxes between grid cells, rather than the nearest neighbors method we used in Example 1.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tY3Xo6aj7J"}],"key":"J2PWt2N02j"}],"key":"kl4uHeTkSe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get the data using intake-esgf and Rooki again","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W9zLPBwfGh"}],"identifier":"get-the-data-using-intake-esgf-and-rooki-again","label":"Get the data using intake-esgf and Rooki again","html_id":"get-the-data-using-intake-esgf-and-rooki-again","implicit":true,"key":"xnlXtY1Nuw"}],"key":"HqbnN64Uw3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we’ll look at the annual mean near-surface air temperature for CESM2 in 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HG6ATFCgNh"}],"key":"xI6Q5s2VLx"}],"key":"eVND4QHrST"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"tas\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"awIzIzF94I"},{"type":"output","id":"1P8mWiHa2ywWZng4C2930","data":[],"visibility":"show","key":"HJuOtjLSC2"}],"visibility":"show","key":"SQW1kSC8RI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, get the dataset with the original grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XwZNBdpG9x"}],"key":"V6QGzMDhyd"}],"key":"qtMB9XETXI"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Subset(\n        ops.Input('tas', [dsets[0]]),\n        time='2010/2010'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_og = resp.datasets()[0]\nelse:\n    print(resp.status)\n","visibility":"show","key":"tXOVdGmJCX"},{"type":"output","id":"NqrH0xaUujMcbc0-WgX5S","data":[],"visibility":"show","key":"IdkWLa7pRv"}],"visibility":"show","key":"J2yJmyiOLj"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fYXHSV6iGd"},{"type":"inlineCode","value":".grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AgTTiTEn0F"},{"type":"text","value":" attribute to get information on the native grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZrIAyZHmbh"}],"key":"ue6FwLM7J5"}],"key":"kRNbUj517s"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_og.grid","visibility":"show","key":"ghnWPxq1pJ"},{"type":"output","id":"KvQ0flDDAJD6thes9mPfv","data":[],"visibility":"show","key":"zwmeqGi1Gg"}],"visibility":"show","key":"WjO0lRgfqw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The native grid is 0.9°x1.25°, so let’s try coarsening to a 1.25°x1.25° grid using the conservative method:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YFUhT59VIu"}],"key":"PRK0ct189I"}],"key":"mCoPSDOKUe"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='1pt25deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_125 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"QhFeK3aef3"},{"type":"output","id":"iPzbkOd58nLi2eFjQNyw3","data":[],"visibility":"show","key":"drFA8Ip4oG"}],"visibility":"show","key":"ULERWOmWPS"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_125.grid","visibility":"show","key":"FZH7BqV2fS"},{"type":"output","id":"2pGBdNx7Ybi4Q3Q9yEy8t","data":[],"visibility":"show","key":"HoafPJQX1S"}],"visibility":"show","key":"wk58IHwU8h"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also make it even coarser by regridding to a 2.5°x2.5° grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vtbjQDSRfq"}],"key":"sm7rr1pXYX"}],"key":"bnjHep456N"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='2pt5deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_25 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"eCXHdj60z8"},{"type":"output","id":"yhUHgAAV4atsYrkosPZu1","data":[],"visibility":"show","key":"Vo9Dh5pB8f"}],"visibility":"show","key":"cuot9N5c4A"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_25.grid","visibility":"show","key":"kE0wpGoFGO"},{"type":"output","id":"Krij-7OiDHCdGsNVi6THb","data":[],"visibility":"show","key":"iOk5tiUnlo"}],"visibility":"show","key":"iXivinujwD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot each dataset to look at the coarsened grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zhthNZmPFT"}],"identifier":"plot-each-dataset-to-look-at-the-coarsened-grids","label":"Plot each dataset to look at the coarsened grids","html_id":"plot-each-dataset-to-look-at-the-coarsened-grids","implicit":true,"key":"sgawKrm9qh"}],"key":"tESpdSCVbD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Make a quick plot first:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BYnIqQRkql"}],"key":"IJn8yWaZ2P"}],"key":"JQmPui9tBw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for ds in [ds_og, ds_125, ds_25]:\n    ds[\"tas\"].plot()\n    plt.show()\n    ","visibility":"show","key":"d7yMWAMWxQ"},{"type":"output","id":"jBcbov-_OeyOwjFghmANl","data":[],"visibility":"show","key":"iU289gU4Dl"}],"visibility":"show","key":"RwcvHiHg2r"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the coarsened datsets together using Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u3pCJXsa7j"}],"identifier":"plot-the-coarsened-datsets-together-using-cartopy","label":"Plot the coarsened datsets together using Cartopy","html_id":"plot-the-coarsened-datsets-together-using-cartopy","implicit":true,"key":"UheYKK4xCd"}],"key":"ttSoTnj3rT"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now let’s zoom in on a smaller region, the continental US, to get a clear view of the difference in grid resolution. Here we can also decrease the colorbar limits to better see how the variable ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UyZPolj2Sy"},{"type":"inlineCode","value":"tas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U5CzyA9Fba"},{"type":"text","value":" varies within the smaller region.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qaS3O9adiR"}],"key":"eJU8UKk6H4"}],"visibility":"show","key":"M98xJ27OKy"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up the figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], height_ratios=[1, 1, 1], hspace=0.3, wspace=0.2)\n\n# specify the projection\nproj = ccrs.PlateCarree()\n\n# set up plot axes\nax1 = plt.subplot(gs[0, 0], projection=proj)\nax2 = plt.subplot(gs[1, 0], projection=proj)\nax3 = plt.subplot(gs[2, 0], projection=proj)\naxes_list = [ax1, ax2, ax3]\n\n# set up colorbar axis\naxcb = plt.subplot(gs[:, 1])\n\n# loop through each dataset and its corresponding axis\nfor i, dset in enumerate([ds_og, ds_125, ds_25]):\n    plot_ds = dset.tas.isel(time=0)\n    ax = axes_list[i]\n    pcm = ax.pcolormesh(plot_ds.lon, plot_ds.lat, plot_ds, vmin=270, vmax=302.5, transform=proj)\n    \n    # add borders and coastlines\n    ax.add_feature(cfeature.BORDERS)\n    ax.coastlines()\n    \n    # limit to CONUS for this example\n    ax.set_xlim(-130, -60)\n    ax.set_ylim(22, 52)\n    \n    # add grid labels on bottom & left only\n    gl = ax.gridlines(color=\"None\", draw_labels=True)\n    gl.top_labels = False\n    gl.right_labels = False\n    \n    # label with the regrid type; if it fails, that means it hasn't been regridded\n    # (so label with the grid attribute instead)\n    try:\n        ax.set_title(dset.regrid_operation)\n    except:\n        ax.set_title(dset.grid)\n        \n# use the same colorbar for all plots\naxcb.axis(\"off\")\naxcb_ins = inset_axes(axcb, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar = plt.colorbar(pcm, cax=axcb_ins, orientation=\"vertical\", extend=\"both\")\ncbar.set_label(\"{n} ({u})\".format(n=plot_ds.long_name, u=plot_ds.units))\n        \nplt.show()\n","visibility":"show","key":"YRtB4cGxeV"},{"type":"output","id":"5nfe6uznycmWGSTJsfdp4","data":[],"visibility":"show","key":"cHJXX9J9Aj"}],"visibility":"show","key":"ZLZ942K1xS"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hKZou5JlQy"}],"key":"yuSlc5D7RH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zDNBTMScz4"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"a1hsPEArYe"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"Rooki","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sthMJwgaBA"},{"type":"text","value":" offers a quick and easy way to regrid CMIP model data that can be located using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fRGq2UILdp"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AFSsXRO6DK"},{"type":"text","value":". ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J5rv22QHoQ"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fgMUsYaEA7"},{"type":"text","value":" lets us easily customize the plot to neatly display the geospatial data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z1xGruANFf"}],"key":"vsltYmRbT7"}],"key":"xpqjjnkjsd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oSVsORbL1u"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"P88AhQA3Zw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Regridding overview from NCAR","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"n0vKpTsE7z"}],"urlSource":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","key":"lDd5Zr1x3F"},{"type":"text","value":", including descriptions of various regridding methods","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ja1Ob6jrMj"}],"key":"GymG6PZk8B"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Rooki regridding example notebook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SnRumQ0NkL"}],"urlSource":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","data":{"kind":"file","org":"roocs","repo":"rooki","reference":"master","file":"notebooks/demo/demo-rooki-regrid-cmip6.ipynb","raw":"https://raw.githubusercontent.com/roocs/rooki/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb"},"internal":false,"protocol":"github","key":"PrKJFPaDNC"}],"key":"H3RaQs130b"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Rooki documentation","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rk7OgTsMmB"}],"urlSource":"https://rooki.readthedocs.io/en/latest/","key":"yOW3aQIGGf"}],"key":"x5ihh534WI"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Cartopy logo image source","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"axzXwjlhvQ"}],"urlSource":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","key":"hBngHcQwrC"}],"key":"PQ6ZcZDkUh"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/#","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Rooki logo image source","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"PNS1nDHTHt"}],"urlSource":"https://rooki.readthedocs.io/en/latest/#","key":"neLNCxsdEs"}],"key":"sDXMj63YDk"}],"key":"uiBKySuBrN"}],"key":"YGrvSPAb3b"}],"key":"GWiDteBk1y"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compute Demo: ENSO nonlinearity index with CMIP6 data","url":"/notebooks/rooki-enso-nonlinear","group":"Workflows"},"next":{"title":"Complex Searching with intake and analysing employing xarray","url":"/notebooks/complex-search2-and-analysis","group":"Workflows"}}},"domain":"http://localhost:3000"}