{"version":2,"kind":"Notebook","sha256":"af49b1db30fe9319e377b5ff8afe08057f601849c4eb64d85ad3e4febc0e7d4b","slug":"notebooks.ex-regrid-plot","location":"/notebooks/ex-regrid-plot.ipynb","dependencies":[],"frontmatter":{"title":"Demo: Regridding and Plotting with Rooki and Cartopy","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/esgf-cookbook","copyright":"2023","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/esgf-cookbook/blob/main/notebooks/ex-regrid-plot.ipynb","thumbnail":"/esgf-cookbook/build/esgf-78dcd53cf71f1bfdf3b51dbb45e96295.png","exports":[{"format":"ipynb","filename":"ex-regrid-plot.ipynb","url":"/esgf-cookbook/build/ex-regrid-plot-7ac44690eea6e9a3d6988c825e907f7e.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"image","url":"/esgf-cookbook/build/esgf-78dcd53cf71f1bfdf3b51dbb45e96295.png","alt":"ESGF logo","width":250,"key":"iep4SWf73Q","urlSource":"images/esgf.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NKdo6dtpkt"},{"type":"image","url":"/esgf-cookbook/build/rooki_logo-445f5a342d25f0937d510419d9dc9d45.png","alt":"Rooki logo","width":125,"key":"OyrWeVwTis","urlSource":"images/logos/rooki_logo.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nRBUfVy3cN"},{"type":"image","url":"/esgf-cookbook/build/cartopy_logo-a2de729e9cd6174b9773511e6ba0fc00.png","alt":"Cartopy logo","width":250,"key":"VdXBHj18hR","urlSource":"images/logos/cartopy_logo.png"}],"key":"UOP1kjioEj"}],"visibility":"show","key":"a1aEEgqNB8"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Demo: Regridding and Plotting with Rooki and Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rNALxcwBQf"}],"identifier":"demo-regridding-and-plotting-with-rooki-and-cartopy","label":"Demo: Regridding and Plotting with Rooki and Cartopy","html_id":"demo-regridding-and-plotting-with-rooki-and-cartopy","implicit":true,"key":"pkLXJYYqz2"}],"visibility":"show","key":"Hflz1g2Bbs"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yL2KzeIvhU"}],"visibility":"show","key":"Q0ZkLlAlGT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gxIcIhfwM3"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"TKyw6SlqLV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we demonstrate how to use Rooki to regrid CMIP model data and plot it in Cartopy for two examples:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fIq30aVwHz"}],"key":"WjIxk1XMzT"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Regrid two CMIP models onto the same grid","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"UpTo4lzhYP"}],"key":"BAXg1JasAk"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Coarsen the output for one model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uYCxG5mMpM"}],"key":"pl1so8U2Zb"}],"key":"WiRHKf9dr6"}],"key":"U4q58vbrhw"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aCa9Gv78dh"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"SRfHV2ValH"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GOWjJkXB4n"}],"key":"AGB9KHWMhU"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cXACjcSprQ"}],"key":"zOqV79PZij"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ROxqq2SK0a"}],"key":"MVMzcEZDxR"}],"key":"mqfxQCNF9b"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to intake-esgf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"wfYx9QaqJt"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","key":"LW5aiXOzuN"}],"key":"GnpS8CchZY"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"X2XWSPlOAD"}],"key":"lFSOscXiF0"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"Q6npTrD9Sh"}],"key":"Rjv1U2RT4o"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"AATp26LXOu"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"uV1GCbNeTw"}],"key":"DA4W96IssB"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"U0eY1F45Uw"}],"key":"V7eUzQmtZ2"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"JU6dIlqLqH"}],"key":"Tnmh8NdAMu"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Using Rooki to access CMIP6 data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mL0769BPsp"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","key":"LulyT4ZfJp"}],"key":"efuRl0E1MF"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HvWftYm8Zt"}],"key":"IDwSIhnP05"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Familiarity with rooki","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dbPGsbA4K1"}],"key":"y0u0HD9pRo"}],"key":"Y1fld1Y0FB"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Understanding of NetCDF","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"oHYz4fTaz0"}],"urlSource":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","key":"Jx240HQdU7"}],"key":"uCkMUxAnli"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"C1Kww0Ex40"}],"key":"aKnx8LUC6B"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tCrYieBo1f"}],"key":"mgVEtMw8ea"}],"key":"rGHHCOYqpj"}],"key":"WpJJP4ON1G"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"L1ZWoJfsqH"}],"key":"mfQIH1Zvny"},{"type":"text","value":": 15 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Nyhxe2Ap0A"}],"key":"xvww1SPrbn"}],"key":"QWhppxuRS8"}],"visibility":"show","key":"QNWWerGGC7"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LLnlrRIrcE"}],"key":"wWrXZwEPgG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YYOEFi3WYq"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"sf8l1goeSZ"}],"key":"PmNUb4XU5E"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport intake_esgf\n\n# Run this on the DKRZ node in Germany, using the ESGF1 index node at LLNL\nos.environ[\"ROOK_URL\"] = \"http://rook.dkrz.de/wps\"\nintake_esgf.conf.set(indices={\"anl-dev\": False,\n                               \"ornl-dev\": False,\n                               \"esgf-node.llnl.gov\": True})\n\nimport rooki.operators as ops\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\nimport intake_esgf\nfrom intake_esgf import ESGFCatalog\nfrom rooki import rooki\nfrom matplotlib.gridspec import GridSpec\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes\n","visibility":"show","key":"YqZH0eUnyd"},{"type":"output","id":"pAjVR6ra-5MRFccsAp-X6","data":[],"visibility":"show","key":"ss3cM7G1qK"}],"visibility":"show","key":"UzjYa65zJo"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 1: Regrid two CMIP6 models onto the same grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IcVuGk5XdN"}],"identifier":"example-1-regrid-two-cmip6-models-onto-the-same-grid","label":"Example 1: Regrid two CMIP6 models onto the same grid","html_id":"example-1-regrid-two-cmip6-models-onto-the-same-grid","implicit":true,"key":"PARzw7GY78"}],"visibility":"show","key":"ltuLBniU60"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we want to compare the historical precipitation output between two CMIP models, CESM2 and CanESM5. Here will will look at the annual mean precipitation for 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u9NWc5RjwY"}],"key":"BXcBlKW0wU"}],"key":"AFQ88qC0W3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the desired datasets using intake-esgf and rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kg4I2IyY2f"}],"identifier":"access-the-desired-datasets-using-intake-esgf-and-rooki","label":"Access the desired datasets using intake-esgf and rooki","html_id":"access-the-desired-datasets-using-intake-esgf-and-rooki","implicit":true,"key":"wyIYc1A1QL"}],"key":"cRZ2X37HST"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The function and workflow to read in CMPI6 data using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NwleQg1dUs"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"csl4D0t07z"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hmr3M43kil"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kmAJXLOcm0"},{"type":"text","value":" in the next few cells are adapted from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JeLKE3zIhH"},{"type":"link","url":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"intake​-esgf​-with​-rooki​.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ncYXqD8t8D"}],"urlSource":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","data":{"kind":"file","org":"ProjectPythia","repo":"esgf-cookbook","reference":"cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9","file":"notebooks/use-intake-esgf-with-rooki.ipynb","raw":"https://raw.githubusercontent.com/ProjectPythia/esgf-cookbook/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb"},"internal":false,"protocol":"github","key":"tDkqIgJzBc"},{"type":"text","value":". Essentially, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eayXKnHsjd"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hPWzWPT8ss"},{"type":"text","value":" to find the dataset IDs we want and then subset and average them using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EILV3IXQxf"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SKFkBgxSnF"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XIfW766vgJ"}],"key":"NBJyl3dL3P"}],"visibility":"show","key":"I36STxRbpv"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def separate_dataset_id(id_list):\n    rooki_id = id_list[0]\n    rooki_id = rooki_id.split(\"|\")[0]\n    #rooki_id = f\"css03_data.{rooki_id}\"  # <-- just something you have to know for now :(\n    return rooki_id\n","visibility":"show","key":"BdCXOz8sR6"},{"type":"output","id":"o67dJhMWJj_mpPQoyUJHc","data":[],"visibility":"show","key":"heZMTbUuXf"}],"visibility":"show","key":"bK7r7kcZ6u"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"pr\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\", \"CanESM5\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"mOFt53PkhF"},{"type":"output","id":"0z7Tsl6GQ6bgUmDIAVUrs","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:79: UserWarning: You have enabled at least one index which uses the old Solr technology. ESGF is moving away from this technology and you may find that some indicesfail to return a response.\n  warnings.warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"   Searching indices:   0%|          |0/2 [       ?index/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"7afba264076e4675ad08c699adb9c68b\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:323: UserWarning: SolrESGFIndex('esgf-node.llnl.gov') failed to return a response, results may be incomplete\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"['CMIP6.CMIP.CCCma.CanESM5.historical.r1i1p1f1.Amon.pr.gn.v20190429',\n 'CMIP6.CMIP.NCAR.CESM2.historical.r1i1p1f1.Amon.pr.gn.v20190401']","content_type":"text/plain"}}}],"visibility":"show","key":"k80PlOMaEW"}],"visibility":"show","key":"npvOIrXZ3b"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subset the data to get the precipitation variable for 2010 and then average by time:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x2DDOJpU9Y"}],"key":"mfPniaz5xx"}],"key":"T77Oeovxji"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dset_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Subset(\n            ops.Input('pr', [dset_id]),\n            time='2010/2010'\n        )\n    )\n\n    resp = wf.orchestrate()\n\n    # if it worked, add the dataset to our list\n    if resp.ok:\n        dset_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n","visibility":"show","key":"ErFJ3gwS4I"},{"type":"output","id":"GuGs3QezjhLcf_vry6jFt","data":[{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_wc7wfzba/pr_Amon_CanESM5_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"},{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_vmr2attb/pr_Amon_CESM2_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"}],"visibility":"show","key":"OT7tMw1TJ0"}],"visibility":"show","key":"D770TU1wRd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the dataset list to get an overview of the metadata structure:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wKKdvbjuLw"}],"key":"QMYHFAQU7D"}],"key":"HBr2bRuulT"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list)","visibility":"show","key":"XuZAYfo7v9"},{"type":"output","id":"rLOnV0RIOocngdAx_ieMz","data":[{"output_type":"stream","name":"stdout","text":"[<xarray.Dataset> Size: 37kB\nDimensions:    (time: 1, lat: 64, bnds: 2, lon: 128)\nCoordinates:\n  * lat        (lat) float64 512B -87.86 -85.1 -82.31 ... 82.31 85.1 87.86\n  * lon        (lon) float64 1kB 0.0 2.812 5.625 8.438 ... 351.6 354.4 357.2\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: bnds\nData variables:\n    lat_bnds   (time, lat, bnds) float64 1kB ...\n    lon_bnds   (time, lon, bnds) float64 2kB ...\n    pr         (time, lat, lon) float32 33kB ...\n    time_bnds  (time, bnds) object 16B ...\nAttributes: (12/53)\n    CCCma_model_hash:            3dedf95315d603326fde4f5340dc0519d80d10c0\n    CCCma_parent_runid:          rc3-pictrl\n    CCCma_pycmor_hash:           33c30511acc319a98240633965a04ca99c26427e\n    CCCma_runid:                 rc3.1-his01\n    Conventions:                 CF-1.7 CMIP-6.2\n    YMDH_branch_time_in_child:   1850:01:01:00\n    ...                          ...\n    tracking_id:                 hdl:21.14100/363e1ebe-46e7-43dc-9feb-a7a4a0c...\n    variable_id:                 pr\n    variant_label:               r1i1p1f1\n    version:                     v20190429\n    license:                     CMIP6 model data produced by The Government ...\n    cmor_version:                3.4.0, <xarray.Dataset> Size: 233kB\nDimensions:    (time: 1, lat: 192, lon: 288, nbnd: 2)\nCoordinates:\n  * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n  * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: nbnd\nData variables:\n    pr         (time, lat, lon) float32 221kB ...\n    lat_bnds   (time, lat, nbnd) float64 3kB ...\n    lon_bnds   (time, lon, nbnd) float64 5kB ...\n    time_bnds  (time, nbnd) object 16B ...\nAttributes: (12/45)\n    Conventions:            CF-1.7 CMIP-6.2\n    activity_id:            CMIP\n    branch_method:          standard\n    branch_time_in_child:   674885.0\n    branch_time_in_parent:  219000.0\n    case_id:                15\n    ...                     ...\n    sub_experiment_id:      none\n    table_id:               Amon\n    tracking_id:            hdl:21.14100/a2c2f719-6790-484b-9f66-392e62cd0eb8\n    variable_id:            pr\n    variant_info:           CMIP6 20th century experiments (1850-2014) with C...\n    variant_label:          r1i1p1f1]\n"}],"visibility":"show","key":"InjoD5XXCX"}],"visibility":"show","key":"nHnqHyvifH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare the precipitation data between models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pDpJZJlAVy"}],"identifier":"compare-the-precipitation-data-between-models","label":"Compare the precipitation data between models","html_id":"compare-the-precipitation-data-between-models","implicit":true,"key":"ZJUfZ90fd2"}],"key":"PVOsWHJBxd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, let’s quickly plot the 2010 annual mean precipitation for each model to see what we’re working with. Since precipitation values vary greatly in magnitude, using a log-normalized colormap makes the data easier to visualize.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LfkyYf8bic"}],"key":"gqKA7PWk5A"}],"key":"hiYjq2cVrP"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for dset in dset_list:\n    dset.pr.plot(norm=mcolors.LogNorm())\n    plt.show()","visibility":"show","key":"BlaO2aQcub"},{"type":"output","id":"JF1PvTXGYzLQylJP7hUSX","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b760f393e344a047915437d35449d7c2","path":"/esgf-cookbook/build/b760f393e344a047915437d35449d7c2.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"67a9fc1032f4543e61d9864d1cc4a5fc","path":"/esgf-cookbook/build/67a9fc1032f4543e61d9864d1cc4a5fc.png"}}}],"visibility":"show","key":"E806WUqCRY"}],"visibility":"show","key":"q3NEKXDB5f"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true,"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Uncomment and run the following cell. If we try to take the difference outright, it fails!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YhcepzFQHQ"}],"key":"dfMElTzZZL"}],"visibility":"show","key":"Jyf1oWdqky"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# pr_diff = dset_list[0].pr - dset_list[1].pr","visibility":"show","key":"sv7GMD6R2C"},{"type":"output","id":"o8JzLENMrpl27z13Fcw6Z","data":[],"visibility":"show","key":"Gr26yM8Ho2"}],"visibility":"show","key":"EpidvDdymZ"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The models have different grids so we can’t directly subtract the data. We can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T6rsJlWk3g"},{"type":"inlineCode","value":"grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WISYOQPbYY"},{"type":"text","value":" attribute to get information on which grid each uses.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q8S7ljSoPF"}],"key":"rNSDJcHaT0"}],"visibility":"show","key":"msUyshD13p"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].grid)\nprint(dset_list[1].grid)","visibility":"show","key":"GpV2hDKOwx"},{"type":"output","id":"9GeeimUYhcxFaDhvjmASG","data":[{"output_type":"stream","name":"stdout","text":"T63L49 native atmosphere, T63 Linear Gaussian Grid; 128 x 64 longitude/latitude; 49 levels; top level 1 hPa\nnative 0.9x1.25 finite volume grid (192x288 latxlon)\n"}],"visibility":"show","key":"oLc5D7fJbf"}],"visibility":"show","key":"zajVygm94O"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Regrid the models onto the same grid with Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Wdzv618IXh"}],"identifier":"regrid-the-models-onto-the-same-grid-with-rooki","label":"Regrid the models onto the same grid with Rooki","html_id":"regrid-the-models-onto-the-same-grid-with-rooki","implicit":true,"key":"y9IT5UFos4"}],"key":"qeRaMliECK"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Look at the documentation on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bUQHaySMbW"},{"type":"inlineCode","value":"regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TOildsR58g"},{"type":"text","value":" operator to see the available grid types and regrid methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vvro1WuPA8"}],"key":"V6cludZKY8"}],"visibility":"show","key":"X756qSJzDA"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rooki.regrid?","visibility":"show","key":"iZC0I6FNCb"},{"type":"output","id":"oS4oj499zxyX4XiF_VYr6","data":[],"visibility":"show","key":"hfe3TgYcxW"}],"visibility":"show","key":"JbxsxhnzG4"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we’ll do the same process as before to read in and subset the datasets with rooki, but now we ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m73EywcyEs"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"regrid using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vdTjGhBNdq"},{"type":"inlineCode","value":"ops.Regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kBw9RVe5nG"},{"type":"text","value":" before averaging over time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zbEZHvyLVF"}],"key":"GS3i2FG909"},{"type":"text","value":". In this example, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DVoVqG3rAd"},{"type":"inlineCode","value":"method=nearest_s2d","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HcNUchqRgD"},{"type":"text","value":" to regrid each model onto the target grid using a nearest neighbors method. The target grid is a 1.25° grid, specified by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KFiQlzwtvY"},{"type":"inlineCode","value":"grid='1pt25deg'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aEr9ErZCIX"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C8RYG0K1JU"}],"key":"u24lf0etJa"}],"visibility":"show","key":"wQk7ssphgW"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rg_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Regrid(\n            ops.Subset(\n                ops.Input('pr', [dset_id]),\n                time='2010/2010'\n            ),\n            method='nearest_s2d',\n            grid='1pt25deg'\n        )\n    )\n\n\n    resp = wf.orchestrate()\n    \n    # if it worked, add the regridded dataset to our list\n    if resp.ok:\n        rg_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n        ","visibility":"show","key":"p1iDsIGbxD"},{"type":"output","id":"Fx8gIzj508DLwtuGrKz6X","data":[{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"},{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"}],"visibility":"show","key":"YnqHC22eE2"}],"visibility":"show","key":"w70YchNkwL"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the list of regridded datasets to get an overview of the metadata structure. Note how ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KWwANQCrOh"},{"type":"inlineCode","value":"lat","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bUhLWv2uor"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bvbOjQi2Bp"},{"type":"inlineCode","value":"lon","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"myy5Bz8YVg"},{"type":"text","value":" are now the same and each dataset has additional attributes, including ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WnkWfkIaxW"},{"type":"inlineCode","value":"grid_original","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b3EP7gssTf"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OQkGgw8FI7"},{"type":"inlineCode","value":"regrid_operation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FTdy86F8gb"},{"type":"text","value":", which all keep track of the regridding operations we just completed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wjOgL1TncX"}],"key":"CXzaQjwA8L"}],"key":"TAuwrR2ZZx"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list)","visibility":"show","key":"v24xEG21js"},{"type":"output","id":"UpLtxY7N_41WcWKF7U4Yg","data":[{"output_type":"stream","name":"stdout","text":"[[], []]\n"}],"visibility":"show","key":"D8ilgLF5wu"}],"visibility":"show","key":"LKsPwf0xjw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now they are on the same grid!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ToyFninuAD"}],"key":"ZoduapM73q"}],"key":"MJa3kVO0X5"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list[0].grid)\nprint(rg_list[1].grid)","visibility":"show","key":"iwQ7xVPaHL"},{"type":"output","id":"VzK-lM7mKEIqC4ukwVK0H","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mAttributeError\u001b[39m                            Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[12]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[43mrg_list\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m0\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m.\u001b[49m\u001b[43mgrid\u001b[49m)\n\u001b[32m      2\u001b[39m \u001b[38;5;28mprint\u001b[39m(rg_list[\u001b[32m1\u001b[39m].grid)\n\n\u001b[31mAttributeError\u001b[39m: 'list' object has no attribute 'grid'","ename":"AttributeError","evalue":"'list' object has no attribute 'grid'"}],"visibility":"show","key":"otCtz7ThGv"}],"visibility":"show","key":"is5bzRMCoz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quick plot the before and after for each model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xdstHCFxaL"}],"identifier":"quick-plot-the-before-and-after-for-each-model","label":"Quick plot the before and after for each model","html_id":"quick-plot-the-before-and-after-for-each-model","implicit":true,"key":"nISd4dLrdK"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The plots largely look the same, as they should - with the nearest neighbors method, we are just shifting the precipitation data onto a different grid without averaging between grid cells.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HRGJGrPlQW"}],"key":"W4pnVusOdE"}],"key":"bxf2fW1bn8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].source_id)\nfor ds in [dset_list[0], rg_list[0]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"yBTeBZpzPI"},{"type":"output","id":"8IiDBnvJgAfQXUBqZYSOW","data":[],"visibility":"show","key":"eIIkGAeT4S"}],"visibility":"show","key":"ziWAHp724z"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[1].source_id)\nfor ds in [dset_list[1], rg_list[1]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"inSN2408qC"},{"type":"output","id":"jaSXqEVzj4f7te7bDZDiJ","data":[],"visibility":"show","key":"Lwg9bms4H8"}],"visibility":"show","key":"kC8yPNkxHg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Take the difference between precipitation datasets and plot it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ikjd56kCED"}],"identifier":"take-the-difference-between-precipitation-datasets-and-plot-it","label":"Take the difference between precipitation datasets and plot it","html_id":"take-the-difference-between-precipitation-datasets-and-plot-it","implicit":true,"key":"lGHazCLI4X"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that both models are on the same grid, we can subtract the precipitation datasets and plot the difference!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tiFRGGoZtC"}],"key":"UnM1CsH1XM"}],"key":"axabBTW3Hc"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"pr_diff = rg_list[0] - rg_list[1]\n\npr_diff.pr.plot(cmap=\"bwr\")\nplt.show()\n","visibility":"show","key":"eHKmONj2Aa"},{"type":"output","id":"F_VnFtmuYuyajeTarWMmo","data":[],"visibility":"show","key":"ZrFB9ddVkj"}],"visibility":"show","key":"oCpqW2hD0T"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot everything together","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wX5h5uqcZN"}],"identifier":"plot-everything-together","label":"Plot everything together","html_id":"plot-everything-together","implicit":true,"key":"uSScxAWLjJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot the regridded precipitation data as well as the difference between models on the same figure. We can use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oOPQrh9PJU"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"J3u7oIspvg"},{"type":"text","value":" to make it pretty. With ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"A1kwvhyGRP"},{"type":"inlineCode","value":"GridSpec","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wd3lFYuqmc"},{"type":"text","value":", we can also split up the figure and organize it to use the same colorbar for more than one panel.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"uA62earx86"}],"key":"EwLwc3Qg5W"}],"key":"JvGL1iks56"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], hspace=0.2)\n\n# specify the projection\nproj = ccrs.Mollweide()\n\n# set up plots for each model\naxpr_1 = plt.subplot(gs[0, 0], projection=proj)\naxpr_2 = plt.subplot(gs[1, 0], projection=proj)\naxdiff = plt.subplot(gs[2, 0], projection=proj)\n\n# axes where the colorbar will go \naxcb_pr = plt.subplot(gs[:2, 1]) \naxcb_diff = plt.subplot(gs[2, 1])\naxcb_pr.axis(\"off\")\naxcb_diff.axis(\"off\")\n\n# plot the precipitation for both models\nfor i, ax in enumerate([axpr_1, axpr_2]):\n    ds_rg = rg_list[i]\n    pcm = ax.pcolormesh(ds_rg.lon, ds_rg.lat, ds_rg.pr.isel(time=0), norm=mcolors.LogNorm(vmin=1e-7, vmax=3e-4),\n                         transform=ccrs.PlateCarree()\n                       )\n    ax.set_title(ds_rg.parent_source_id)\n    ax.add_feature(cfeature.COASTLINE)\n    \n# now plot the difference\npcmd = axdiff.pcolormesh(pr_diff.lon, pr_diff.lat, pr_diff.pr.isel(time=0), cmap=\"bwr\", vmin=-3e-4, vmax=3e-4,\n                         transform=ccrs.PlateCarree()\n                        )\naxdiff.set_title(\"{a} - {b}\".format(a=rg_list[0].parent_source_id, b=rg_list[1].parent_source_id))\naxdiff.add_feature(cfeature.COASTLINE)\n\n# set the precipitation colorbar\naxcb_pr_ins = inset_axes(axcb_pr, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar_pr = plt.colorbar(pcm, cax=axcb_pr_ins, orientation=\"vertical\", extend=\"both\")\ncbar_pr.set_label(\"{n} ({u})\".format(n=rg_list[0].pr.long_name, u=rg_list[0].pr.units))\n\n# set the difference colorbar\naxcb_diff_ins = inset_axes(axcb_diff, width=\"50%\", height=\"100%\", loc=\"center\")\ncbar_diff = plt.colorbar(pcmd, cax=axcb_diff_ins, orientation=\"vertical\", extend=\"both\")\ncbar_diff.set_label(\"Difference ({u})\".format(u=pr_diff.pr.units))\n\nplt.show()\n","visibility":"show","key":"OE7i1sJIdr"},{"type":"output","id":"_uvPZl86VBJZUBLJ0Uh3a","data":[],"visibility":"show","key":"LXIm2SEkDt"}],"visibility":"show","key":"QPUimNjzX0"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 2: Coarsen the output for one model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w37uRlVLvz"}],"identifier":"example-2-coarsen-the-output-for-one-model","label":"Example 2: Coarsen the output for one model","html_id":"example-2-coarsen-the-output-for-one-model","implicit":true,"key":"v87bnzKNPQ"}],"visibility":"show","key":"MR4QeIBxR4"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jQvzkNEtWH"},{"type":"inlineCode","value":"Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o6kugImULT"},{"type":"text","value":" to regrid the data from one model onto a coarser grid. In this case, it may make more sense to use a conservative regridding method, which will conserve the physical fluxes between grid cells, rather than the nearest neighbors method we used in Example 1.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iVdPXsverd"}],"key":"wtKgcCIcgv"}],"key":"ZCj6wkwGs8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get the data using intake-esgf and Rooki again","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DZ6GCNs6F5"}],"identifier":"get-the-data-using-intake-esgf-and-rooki-again","label":"Get the data using intake-esgf and Rooki again","html_id":"get-the-data-using-intake-esgf-and-rooki-again","implicit":true,"key":"Z83nXcd1tb"}],"key":"fceyWNkqv3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we’ll look at the annual mean near-surface air temperature for CESM2 in 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cp4oIMSykm"}],"key":"PejtpTuCIf"}],"key":"SPZwqPI7Av"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"tas\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"Io3vc1ljh5"},{"type":"output","id":"9YXYm0JEECR3On0D97bLi","data":[],"visibility":"show","key":"vLpXIOsSRQ"}],"visibility":"show","key":"n5qwotZ5wS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, get the dataset with the original grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xEARk9Gdlp"}],"key":"wtZ4aI3jyy"}],"key":"WzMUjGZSXt"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Subset(\n        ops.Input('tas', [dsets[0]]),\n        time='2010/2010'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_og = resp.datasets()[0]\nelse:\n    print(resp.status)\n","visibility":"show","key":"z7YOxTnZUD"},{"type":"output","id":"hgsvoMyJ4wRbdI79zWX2W","data":[],"visibility":"show","key":"FHcVvU2pvY"}],"visibility":"show","key":"FcaQXKfnVr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wYWSPMlEDf"},{"type":"inlineCode","value":".grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kGRbUyTsAf"},{"type":"text","value":" attribute to get information on the native grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A0QBHkxk4j"}],"key":"FAR3iV3cRq"}],"key":"ncYXC1SZ50"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_og.grid","visibility":"show","key":"I9P6DIVfFU"},{"type":"output","id":"rqdPR0U0indtAKJamNX9I","data":[],"visibility":"show","key":"vM4Om5hxNr"}],"visibility":"show","key":"UP89eLN42W"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The native grid is 0.9°x1.25°, so let’s try coarsening to a 1.25°x1.25° grid using the conservative method:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m5ZINIwnrv"}],"key":"Xv3vezABzQ"}],"key":"oSVVwLCOa1"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='1pt25deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_125 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"UkQVfEdksA"},{"type":"output","id":"NcIK8AZveTK0yzst6nrL8","data":[],"visibility":"show","key":"L2zgjF5Z9j"}],"visibility":"show","key":"cAC0DpN1Yy"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_125.grid","visibility":"show","key":"qZTA6efpZX"},{"type":"output","id":"YUT3focLr5AHNiU8vNKOf","data":[],"visibility":"show","key":"USzOIkaALI"}],"visibility":"show","key":"LmsnQs3w7K"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also make it even coarser by regridding to a 2.5°x2.5° grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l5xq8XLMNg"}],"key":"nC1urvbxpG"}],"key":"C6T62mw8at"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='2pt5deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_25 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"M0kWXHmtOn"},{"type":"output","id":"DZwxG8f8Am8FmbZqrI-76","data":[],"visibility":"show","key":"gnWrzc79CQ"}],"visibility":"show","key":"Iscl8IpOGa"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_25.grid","visibility":"show","key":"szkIcUKGvM"},{"type":"output","id":"xYQbB4yh2QNwsJGnVFAcK","data":[],"visibility":"show","key":"Zw834fMvyY"}],"visibility":"show","key":"YxBlTvJh1Z"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot each dataset to look at the coarsened grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L8i5q2ez8a"}],"identifier":"plot-each-dataset-to-look-at-the-coarsened-grids","label":"Plot each dataset to look at the coarsened grids","html_id":"plot-each-dataset-to-look-at-the-coarsened-grids","implicit":true,"key":"BR2Qczgsah"}],"key":"t81JIlSbn7"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Make a quick plot first:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"epfNtisozI"}],"key":"EkYALU91hE"}],"key":"MGRRLiP9PF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for ds in [ds_og, ds_125, ds_25]:\n    ds[\"tas\"].plot()\n    plt.show()\n    ","visibility":"show","key":"uy0GNBkV6k"},{"type":"output","id":"Bk1QXTTDwH0Hl4eIN4TWt","data":[],"visibility":"show","key":"V5m7HxmyqF"}],"visibility":"show","key":"Kxzx568hr4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the coarsened datsets together using Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hdehS0NcXC"}],"identifier":"plot-the-coarsened-datsets-together-using-cartopy","label":"Plot the coarsened datsets together using Cartopy","html_id":"plot-the-coarsened-datsets-together-using-cartopy","implicit":true,"key":"S7tMqux8gb"}],"key":"ORhkqGYqox"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now let’s zoom in on a smaller region, the continental US, to get a clear view of the difference in grid resolution. Here we can also decrease the colorbar limits to better see how the variable ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VSeWFgFdPu"},{"type":"inlineCode","value":"tas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cxQPXH1PxD"},{"type":"text","value":" varies within the smaller region.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HRt1glnA8s"}],"key":"hbyOJUAYiT"}],"visibility":"show","key":"Vek2k6DWxE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up the figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], height_ratios=[1, 1, 1], hspace=0.3, wspace=0.2)\n\n# specify the projection\nproj = ccrs.PlateCarree()\n\n# set up plot axes\nax1 = plt.subplot(gs[0, 0], projection=proj)\nax2 = plt.subplot(gs[1, 0], projection=proj)\nax3 = plt.subplot(gs[2, 0], projection=proj)\naxes_list = [ax1, ax2, ax3]\n\n# set up colorbar axis\naxcb = plt.subplot(gs[:, 1])\n\n# loop through each dataset and its corresponding axis\nfor i, dset in enumerate([ds_og, ds_125, ds_25]):\n    plot_ds = dset.tas.isel(time=0)\n    ax = axes_list[i]\n    pcm = ax.pcolormesh(plot_ds.lon, plot_ds.lat, plot_ds, vmin=270, vmax=302.5, transform=proj)\n    \n    # add borders and coastlines\n    ax.add_feature(cfeature.BORDERS)\n    ax.coastlines()\n    \n    # limit to CONUS for this example\n    ax.set_xlim(-130, -60)\n    ax.set_ylim(22, 52)\n    \n    # add grid labels on bottom & left only\n    gl = ax.gridlines(color=\"None\", draw_labels=True)\n    gl.top_labels = False\n    gl.right_labels = False\n    \n    # label with the regrid type; if it fails, that means it hasn't been regridded\n    # (so label with the grid attribute instead)\n    try:\n        ax.set_title(dset.regrid_operation)\n    except:\n        ax.set_title(dset.grid)\n        \n# use the same colorbar for all plots\naxcb.axis(\"off\")\naxcb_ins = inset_axes(axcb, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar = plt.colorbar(pcm, cax=axcb_ins, orientation=\"vertical\", extend=\"both\")\ncbar.set_label(\"{n} ({u})\".format(n=plot_ds.long_name, u=plot_ds.units))\n        \nplt.show()\n","visibility":"show","key":"Nx8RwcMlQn"},{"type":"output","id":"BOtEapopgpdarkvE3jFxS","data":[],"visibility":"show","key":"mtDrDIM2VD"}],"visibility":"show","key":"yZAbbIOFJ3"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VX4MhPr210"}],"key":"FVG0h2ElxI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZRYwihxWHr"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"jbYpE5oxwR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"Rooki","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s2nFIB3RME"},{"type":"text","value":" offers a quick and easy way to regrid CMIP model data that can be located using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x5WnrUxgLv"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jh4Cg5OGmC"},{"type":"text","value":". ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xZ25olycos"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zXpAHwEequ"},{"type":"text","value":" lets us easily customize the plot to neatly display the geospatial data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BVvm6uFw25"}],"key":"mixlzDFIGG"}],"key":"dGAzS7ciMc"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kE9VhHfZtM"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"YQfAZmpaWy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Regridding overview from NCAR","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AW5WcAAevC"}],"urlSource":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","key":"z4MPIlIHcb"},{"type":"text","value":", including descriptions of various regridding methods","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PFN9eBlz5P"}],"key":"FkB24v7yQB"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Rooki regridding example notebook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XsfaW56q8f"}],"urlSource":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","data":{"kind":"file","org":"roocs","repo":"rooki","reference":"master","file":"notebooks/demo/demo-rooki-regrid-cmip6.ipynb","raw":"https://raw.githubusercontent.com/roocs/rooki/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb"},"internal":false,"protocol":"github","key":"y27ajkFIQk"}],"key":"IUFfkjgaYA"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Rooki documentation","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"TkzmpUqNdR"}],"urlSource":"https://rooki.readthedocs.io/en/latest/","key":"foD0hhvHCq"}],"key":"IAcjkJ7Fdg"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Cartopy logo image source","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GLFDBQJ70y"}],"urlSource":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","key":"rOXk7MJPxg"}],"key":"q7ebZXfC2r"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/#","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Rooki logo image source","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"sOfKVw6Qj4"}],"urlSource":"https://rooki.readthedocs.io/en/latest/#","key":"UST6MEyNq8"}],"key":"qNzRFRsCYw"}],"key":"d2SY3jXCCd"}],"key":"qD3QuQchFh"}],"key":"WNoq3mJ9ZD"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compute Demo: ENSO nonlinearity index with CMIP6 data","url":"/notebooks/rooki-enso-nonlinear","group":"Workflows"},"next":{"title":"Complex Searching with intake and analysing employing xarray","url":"/notebooks/complex-search2-and-analysis","group":"Workflows"}}},"domain":"http://localhost:3000"}