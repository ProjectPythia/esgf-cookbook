{"version":2,"kind":"Notebook","sha256":"af49b1db30fe9319e377b5ff8afe08057f601849c4eb64d85ad3e4febc0e7d4b","slug":"notebooks.ex-regrid-plot","location":"/notebooks/ex-regrid-plot.ipynb","dependencies":[],"frontmatter":{"title":"Demo: Regridding and Plotting with Rooki and Cartopy","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/esgf-cookbook","copyright":"2023","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/esgf-cookbook/blob/main/notebooks/ex-regrid-plot.ipynb","thumbnail":"/esgf-cookbook/build/esgf-c764475156fa328223d621237ed1889e.png","exports":[{"format":"ipynb","filename":"ex-regrid-plot.ipynb","url":"/esgf-cookbook/build/ex-regrid-plot-74f3f228880efc9aea700d324ea6de75.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"image","url":"/esgf-cookbook/build/esgf-c764475156fa328223d621237ed1889e.png","alt":"ESGF logo","width":250,"key":"WCHM8IuBtm","urlSource":"images/esgf.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qr7hMjlYwE"},{"type":"image","url":"/esgf-cookbook/build/rooki_logo-10219fe96e75fdb699c0818f3977f85b.png","alt":"Rooki logo","width":125,"key":"ABpMio55fI","urlSource":"images/logos/rooki_logo.png"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kv7c6CQSWw"},{"type":"image","url":"/esgf-cookbook/build/cartopy_logo-4dce0796bc605961e82e3db26207652d.png","alt":"Cartopy logo","width":250,"key":"gatRTqfn3v","urlSource":"images/logos/cartopy_logo.png"}],"key":"A4Y4C0dmVg"}],"visibility":"show","key":"p2j6I6AVrm"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Demo: Regridding and Plotting with Rooki and Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JYVciDfbG0"}],"identifier":"demo-regridding-and-plotting-with-rooki-and-cartopy","label":"Demo: Regridding and Plotting with Rooki and Cartopy","html_id":"demo-regridding-and-plotting-with-rooki-and-cartopy","implicit":true,"key":"K8NZDCYRap"}],"visibility":"show","key":"ESsIPlAOtL"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f8BzOJogHU"}],"visibility":"show","key":"T11cmYIP4t"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R9zNPsnf0k"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"QlKcNqAjto"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we demonstrate how to use Rooki to regrid CMIP model data and plot it in Cartopy for two examples:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JtXdMSNvBP"}],"key":"hLm6L0mrx4"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Regrid two CMIP models onto the same grid","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ESkg224BxQ"}],"key":"afSwBQAUYd"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Coarsen the output for one model","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IXldfqOvSk"}],"key":"B8sPQBPnNi"}],"key":"T1nScC9TGb"}],"key":"TxpuTstDuA"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WWdlyQp82i"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"AticvSnxoB"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CVvIvPoYel"}],"key":"ckznyC0DJm"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eeBkniq47Q"}],"key":"UxFZfeWvAK"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FPyuj63oq6"}],"key":"C7ptDDrc3f"}],"key":"KQHG8gf7u1"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to intake-esgf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oDyxae0K17"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/intro-search.html","key":"jlpU7uQho4"}],"key":"Fo4nQUOVeZ"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HWwF2s5919"}],"key":"NvFd7FEfgM"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"U2U1D7gMKR"}],"key":"lvtVS2TYZN"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nt6jTcoTJT"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"U5d59wNyI0"}],"key":"RKeSV4CLkP"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"GWU6m70gQg"}],"key":"rcLeoDGwX3"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"xOq3bsMVRu"}],"key":"YEWuGAOODj"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Using Rooki to access CMIP6 data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"npbNFsj37r"}],"urlSource":"https://projectpythia.org/esgf-cookbook/notebooks/rooki.html","key":"lpg9rqNS8K"}],"key":"olasFy7VWI"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FtRQ7tPIRG"}],"key":"m46hL0Suld"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Familiarity with rooki","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qsmIpatbDq"}],"key":"QThkE0RXmI"}],"key":"XJnbAZ7tGd"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Understanding of NetCDF","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"V4LeOYGPke"}],"urlSource":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","key":"gmG8G46dHm"}],"key":"lsSzrLhwD5"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ynNOFTcyjr"}],"key":"BV8T4bFL6O"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"K2jHVsLJYe"}],"key":"qonuu4kghL"}],"key":"BzYWBMkIWX"}],"key":"miKb3ngTmt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"oeivRTJReG"}],"key":"kAWl08si5j"},{"type":"text","value":": 15 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Tip03elKBG"}],"key":"wfL3UTDqwn"}],"key":"noyofBD5w8"}],"visibility":"show","key":"qQFhgBV3qq"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WFeOrHA1Ie"}],"key":"NiT1MpwDZg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rp2B7kkiQV"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"JNG6xw0XoC"}],"key":"y31SKktauG"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport intake_esgf\n\n# Run this on the DKRZ node in Germany, using the ESGF1 index node at LLNL\nos.environ[\"ROOK_URL\"] = \"http://rook.dkrz.de/wps\"\nintake_esgf.conf.set(indices={\"anl-dev\": False,\n                               \"ornl-dev\": False,\n                               \"esgf-node.llnl.gov\": True})\n\nimport rooki.operators as ops\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\nimport intake_esgf\nfrom intake_esgf import ESGFCatalog\nfrom rooki import rooki\nfrom matplotlib.gridspec import GridSpec\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes\n","visibility":"show","key":"xgWoPKDstR"},{"type":"output","id":"6hsi9lsaGIH_gUygcIIZw","data":[],"visibility":"show","key":"gemTztRPDJ"}],"visibility":"show","key":"sApSnuQWue"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 1: Regrid two CMIP6 models onto the same grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bHee2HRcKZ"}],"identifier":"example-1-regrid-two-cmip6-models-onto-the-same-grid","label":"Example 1: Regrid two CMIP6 models onto the same grid","html_id":"example-1-regrid-two-cmip6-models-onto-the-same-grid","implicit":true,"key":"UAyTVdV66k"}],"visibility":"show","key":"DokhADlPdJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we want to compare the historical precipitation output between two CMIP models, CESM2 and CanESM5. Here will will look at the annual mean precipitation for 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jD0DgMjf5F"}],"key":"lZ5E4uOaK6"}],"key":"poerCdL9Cj"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the desired datasets using intake-esgf and rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JrVXywA2L9"}],"identifier":"access-the-desired-datasets-using-intake-esgf-and-rooki","label":"Access the desired datasets using intake-esgf and rooki","html_id":"access-the-desired-datasets-using-intake-esgf-and-rooki","implicit":true,"key":"wVtTfcXTZP"}],"key":"eYJegqh8Nf"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The function and workflow to read in CMPI6 data using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HIn8FwmgSg"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HFPLpRqsWe"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FYoLxZfUEQ"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fin6gYfSp9"},{"type":"text","value":" in the next few cells are adapted from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vWmBwjt5rd"},{"type":"link","url":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"intake​-esgf​-with​-rooki​.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ODaizT1QTb"}],"urlSource":"https://github.com/ProjectPythia/esgf-cookbook/blob/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb","data":{"kind":"file","org":"ProjectPythia","repo":"esgf-cookbook","reference":"cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9","file":"notebooks/use-intake-esgf-with-rooki.ipynb","raw":"https://raw.githubusercontent.com/ProjectPythia/esgf-cookbook/cf69015a464b68ee28cfdd4a27cee4e9d6ca2ca9/notebooks/use-intake-esgf-with-rooki.ipynb"},"internal":false,"protocol":"github","key":"vjrrH83wDN"},{"type":"text","value":". Essentially, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"avLVP2Pl8l"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BcAskfT9P0"},{"type":"text","value":" to find the dataset IDs we want and then subset and average them using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cAKO8Tlvc5"},{"type":"inlineCode","value":"rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MrtcRrdqJV"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TRSnEOS2VU"}],"key":"pE3nJSYeGd"}],"visibility":"show","key":"tMcwabUuEA"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def separate_dataset_id(id_list):\n    rooki_id = id_list[0]\n    rooki_id = rooki_id.split(\"|\")[0]\n    #rooki_id = f\"css03_data.{rooki_id}\"  # <-- just something you have to know for now :(\n    return rooki_id\n","visibility":"show","key":"OswB9IGocj"},{"type":"output","id":"3SVJlgAwnOCVVu4qM_nbR","data":[],"visibility":"show","key":"sI8WnUqmBD"}],"visibility":"show","key":"Ech6CuHaPO"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"pr\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\", \"CanESM5\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"Dcd6mLkZA3"},{"type":"output","id":"i4iqdk1A1hQIZZsdjI4Ak","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:98: UserWarning: You have enabled at least one index which uses the old Solr technology. ESGF is moving away from this technology and you may find that some indicesfail to return a response.\n  warnings.warn(\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"   Searching indices:   0%|          |0/2 [       ?index/s]","content_type":"text/plain"},"application/vnd.jupyter.widget-view+json":{"content":"{\"version_major\":2,\"version_minor\":0,\"model_id\":\"3283b5d659ee46c58340fc2fbc4a4ab3\"}","content_type":"application/vnd.jupyter.widget-view+json"}}},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/esgf-cookbook-dev/lib/python3.11/site-packages/intake_esgf/catalog.py:355: UserWarning: SolrESGFIndex('esgf-node.llnl.gov') failed to return a response, results may be incomplete\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"['CMIP6.CMIP.CCCma.CanESM5.historical.r1i1p1f1.Amon.pr.gn.v20190429',\n 'CMIP6.CMIP.NCAR.CESM2.historical.r1i1p1f1.Amon.pr.gn.v20190401']","content_type":"text/plain"}}}],"visibility":"show","key":"VdSHtQZ52j"}],"visibility":"show","key":"zF6LoLfSTz"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subset the data to get the precipitation variable for 2010 and then average by time:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AIHbNITmhB"}],"key":"KoSuiTcJny"}],"key":"yFSPmpdIzO"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dset_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Subset(\n            ops.Input('pr', [dset_id]),\n            time='2010/2010'\n        )\n    )\n\n    resp = wf.orchestrate()\n\n    # if it worked, add the dataset to our list\n    if resp.ok:\n        dset_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n","visibility":"show","key":"sfy9P17wX6"},{"type":"output","id":"w4woszsmMLbomsdV_tY-q","data":[{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_ly2dq63d/pr_Amon_CanESM5_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"},{"output_type":"stream","name":"stdout","text":"Downloading to /tmp/metalink_j_r4hota/pr_Amon_CESM2_historical_r1i1p1f1_gn_20100101-20100101_avg-year.nc.\n"}],"visibility":"show","key":"cqpwu6nzfx"}],"visibility":"show","key":"KM1nVBhnOc"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the dataset list to get an overview of the metadata structure:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pjkBHaKuEr"}],"key":"YvY9UGbpoa"}],"key":"Xjuz7p1WMP"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list)","visibility":"show","key":"H2eV0fCQNX"},{"type":"output","id":"tzOUp8pFT4nb7b8tr9ZcV","data":[{"output_type":"stream","name":"stdout","text":"[<xarray.Dataset> Size: 37kB\nDimensions:    (time: 1, lat: 64, bnds: 2, lon: 128)\nCoordinates:\n  * lat        (lat) float64 512B -87.86 -85.1 -82.31 ... 82.31 85.1 87.86\n  * lon        (lon) float64 1kB 0.0 2.812 5.625 8.438 ... 351.6 354.4 357.2\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: bnds\nData variables:\n    lat_bnds   (time, lat, bnds) float64 1kB ...\n    lon_bnds   (time, lon, bnds) float64 2kB ...\n    pr         (time, lat, lon) float32 33kB ...\n    time_bnds  (time, bnds) object 16B ...\nAttributes: (12/53)\n    CCCma_model_hash:            3dedf95315d603326fde4f5340dc0519d80d10c0\n    CCCma_parent_runid:          rc3-pictrl\n    CCCma_pycmor_hash:           33c30511acc319a98240633965a04ca99c26427e\n    CCCma_runid:                 rc3.1-his01\n    Conventions:                 CF-1.7 CMIP-6.2\n    YMDH_branch_time_in_child:   1850:01:01:00\n    ...                          ...\n    tracking_id:                 hdl:21.14100/363e1ebe-46e7-43dc-9feb-a7a4a0c...\n    variable_id:                 pr\n    variant_label:               r1i1p1f1\n    version:                     v20190429\n    license:                     CMIP6 model data produced by The Government ...\n    cmor_version:                3.4.0, <xarray.Dataset> Size: 233kB\nDimensions:    (time: 1, lat: 192, lon: 288, nbnd: 2)\nCoordinates:\n  * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n  * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n  * time       (time) object 8B 2010-01-01 00:00:00\nDimensions without coordinates: nbnd\nData variables:\n    pr         (time, lat, lon) float32 221kB ...\n    lat_bnds   (time, lat, nbnd) float64 3kB ...\n    lon_bnds   (time, lon, nbnd) float64 5kB ...\n    time_bnds  (time, nbnd) object 16B ...\nAttributes: (12/45)\n    Conventions:            CF-1.7 CMIP-6.2\n    activity_id:            CMIP\n    branch_method:          standard\n    branch_time_in_child:   674885.0\n    branch_time_in_parent:  219000.0\n    case_id:                15\n    ...                     ...\n    sub_experiment_id:      none\n    table_id:               Amon\n    tracking_id:            hdl:21.14100/a2c2f719-6790-484b-9f66-392e62cd0eb8\n    variable_id:            pr\n    variant_info:           CMIP6 20th century experiments (1850-2014) with C...\n    variant_label:          r1i1p1f1]\n"}],"visibility":"show","key":"yVoZ25hygV"}],"visibility":"show","key":"srL29mMBzy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare the precipitation data between models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hZtWuA7lU4"}],"identifier":"compare-the-precipitation-data-between-models","label":"Compare the precipitation data between models","html_id":"compare-the-precipitation-data-between-models","implicit":true,"key":"fygOtcZnTU"}],"key":"u6fr6KajC4"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, let’s quickly plot the 2010 annual mean precipitation for each model to see what we’re working with. Since precipitation values vary greatly in magnitude, using a log-normalized colormap makes the data easier to visualize.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aO2UulU4lF"}],"key":"KqZCH9UqnZ"}],"key":"xAfXC5IeUx"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for dset in dset_list:\n    dset.pr.plot(norm=mcolors.LogNorm())\n    plt.show()","visibility":"show","key":"LTLw7kXcPC"},{"type":"output","id":"N3HYEWGDAwqCJw8ATvBxz","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b760f393e344a047915437d35449d7c2","path":"/esgf-cookbook/build/b760f393e344a047915437d35449d7c2.png"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"67a9fc1032f4543e61d9864d1cc4a5fc","path":"/esgf-cookbook/build/67a9fc1032f4543e61d9864d1cc4a5fc.png"}}}],"visibility":"show","key":"MhcPkIDcAL"}],"visibility":"show","key":"npiZ6SnKJn"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true,"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Uncomment and run the following cell. If we try to take the difference outright, it fails!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rVjSN7ZMSP"}],"key":"l6flA9nVBD"}],"visibility":"show","key":"gahsO3YV4y"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# pr_diff = dset_list[0].pr - dset_list[1].pr","visibility":"show","key":"P3laDuEWxk"},{"type":"output","id":"iaq7HVs95oKRgQ-fB20Rn","data":[],"visibility":"show","key":"Q3L2ERWJ9U"}],"visibility":"show","key":"TkJVUdUJ8H"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The models have different grids so we can’t directly subtract the data. We can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yenNpC4yzV"},{"type":"inlineCode","value":"grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CkmndQrQry"},{"type":"text","value":" attribute to get information on which grid each uses.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wZquB8gYx4"}],"key":"UcxEo1H0X9"}],"visibility":"show","key":"fJswyOfzeZ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].grid)\nprint(dset_list[1].grid)","visibility":"show","key":"iOYM28FbTf"},{"type":"output","id":"y-TgsBCcU7hS7--iqzfTy","data":[{"output_type":"stream","name":"stdout","text":"T63L49 native atmosphere, T63 Linear Gaussian Grid; 128 x 64 longitude/latitude; 49 levels; top level 1 hPa\nnative 0.9x1.25 finite volume grid (192x288 latxlon)\n"}],"visibility":"show","key":"FEbIcIs6He"}],"visibility":"show","key":"gJUPNJzTPC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Regrid the models onto the same grid with Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U1mDWBdmjx"}],"identifier":"regrid-the-models-onto-the-same-grid-with-rooki","label":"Regrid the models onto the same grid with Rooki","html_id":"regrid-the-models-onto-the-same-grid-with-rooki","implicit":true,"key":"rHYLG8hGTj"}],"key":"MjOykiQISl"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Look at the documentation on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HpCJ9J4rpa"},{"type":"inlineCode","value":"regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yxvdq1iTVQ"},{"type":"text","value":" operator to see the available grid types and regrid methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y0CK57FYeI"}],"key":"GFxcmOSkdn"}],"visibility":"show","key":"vQgvu2uTWt"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rooki.regrid?","visibility":"show","key":"iypVq4H8zA"},{"type":"output","id":"A3brSh2SU5b208X7W1sT2","data":[],"visibility":"show","key":"Pkiv7lChB4"}],"visibility":"show","key":"nc3TsuewPS"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we’ll do the same process as before to read in and subset the datasets with rooki, but now we ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HFyinm9JIZ"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"regrid using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Okdlx88V5O"},{"type":"inlineCode","value":"ops.Regrid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"azwDoonq1Q"},{"type":"text","value":" before averaging over time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zQCwovotEx"}],"key":"LIK4FFzFUh"},{"type":"text","value":". In this example, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PNockj5i2l"},{"type":"inlineCode","value":"method=nearest_s2d","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dxbbLi6znE"},{"type":"text","value":" to regrid each model onto the target grid using a nearest neighbors method. The target grid is a 1.25° grid, specified by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NexDrgNLDC"},{"type":"inlineCode","value":"grid='1pt25deg'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xOGEUxmKFx"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uO9jD5CavE"}],"key":"M7mhdwZt8J"}],"visibility":"show","key":"d7CBQGAdpB"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rg_list = [[]]*len(dsets)\n\nfor i, dset_id in enumerate(dsets):\n    wf = ops.AverageByTime(\n        ops.Regrid(\n            ops.Subset(\n                ops.Input('pr', [dset_id]),\n                time='2010/2010'\n            ),\n            method='nearest_s2d',\n            grid='1pt25deg'\n        )\n    )\n\n\n    resp = wf.orchestrate()\n    \n    # if it worked, add the regridded dataset to our list\n    if resp.ok:\n        rg_list[i] = resp.datasets()[0]\n        \n    # if it failed, tell us why\n    else:\n        print(resp.status)\n        ","visibility":"show","key":"jo9g57dmyC"},{"type":"output","id":"JLq6nXdBmesws2jRg2yr-","data":[{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"},{"output_type":"stream","name":"stdout","text":"Process error: not enough values to unpack expected 1, got 0\n"}],"visibility":"show","key":"OECJGsZWiq"}],"visibility":"show","key":"yyItNhZBGS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the list of regridded datasets to get an overview of the metadata structure. Note how ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHuKeB2ue0"},{"type":"inlineCode","value":"lat","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"laEszIuJUL"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w6JpHdy3jb"},{"type":"inlineCode","value":"lon","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nG7iWo2GcD"},{"type":"text","value":" are now the same and each dataset has additional attributes, including ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O5yT9bPLBc"},{"type":"inlineCode","value":"grid_original","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OzhzFGuUSG"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hxmlsrl8tM"},{"type":"inlineCode","value":"regrid_operation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lSahHXQ2ct"},{"type":"text","value":", which all keep track of the regridding operations we just completed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PRROViq1vT"}],"key":"C9hMr1sNQM"}],"key":"TmVp77Jenq"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list)","visibility":"show","key":"Prm5VWSkkC"},{"type":"output","id":"K0rniCK5INCcmeoHx7f9Q","data":[{"output_type":"stream","name":"stdout","text":"[[], []]\n"}],"visibility":"show","key":"C7lLqYJbdF"}],"visibility":"show","key":"SnBNEAMdGz"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now they are on the same grid!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"utZAk2dakc"}],"key":"jmW3Opb3yF"}],"key":"B0ScQH0XSa"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(rg_list[0].grid)\nprint(rg_list[1].grid)","visibility":"show","key":"Rf59jL3D19"},{"type":"output","id":"8fYnWQ1nfvSdUwZoRREoU","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mAttributeError\u001b[39m                            Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[12]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[43mrg_list\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m0\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m.\u001b[49m\u001b[43mgrid\u001b[49m)\n\u001b[32m      2\u001b[39m \u001b[38;5;28mprint\u001b[39m(rg_list[\u001b[32m1\u001b[39m].grid)\n\n\u001b[31mAttributeError\u001b[39m: 'list' object has no attribute 'grid'","ename":"AttributeError","evalue":"'list' object has no attribute 'grid'"}],"visibility":"show","key":"icQrz0BRSb"}],"visibility":"show","key":"WQMpPnKuoN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quick plot the before and after for each model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"afKX8U3U7H"}],"identifier":"quick-plot-the-before-and-after-for-each-model","label":"Quick plot the before and after for each model","html_id":"quick-plot-the-before-and-after-for-each-model","implicit":true,"key":"NzfUFymNOp"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The plots largely look the same, as they should - with the nearest neighbors method, we are just shifting the precipitation data onto a different grid without averaging between grid cells.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"M21CXlgbfW"}],"key":"o24cWiNCg4"}],"key":"blfFl2kALL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[0].source_id)\nfor ds in [dset_list[0], rg_list[0]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"qx5YXJ1Esu"},{"type":"output","id":"0oRIFzfKlAnZtrUH3Mj39","data":[],"visibility":"show","key":"G72oVgfUHJ"}],"visibility":"show","key":"V5V6JClXOE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print(dset_list[1].source_id)\nfor ds in [dset_list[1], rg_list[1]]:\n    ds.pr.plot(norm=mcolors.LogNorm())\n    plt.show()\n","visibility":"show","key":"jhJt9EHeTj"},{"type":"output","id":"DEdsi80GtiOeVKtK4pzYq","data":[],"visibility":"show","key":"dBCDRt2pWV"}],"visibility":"show","key":"iej4xzsFq8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Take the difference between precipitation datasets and plot it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DsLU2brTH4"}],"identifier":"take-the-difference-between-precipitation-datasets-and-plot-it","label":"Take the difference between precipitation datasets and plot it","html_id":"take-the-difference-between-precipitation-datasets-and-plot-it","implicit":true,"key":"h1eOMri0hz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that both models are on the same grid, we can subtract the precipitation datasets and plot the difference!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TbOD97yz49"}],"key":"laVnWlIDxn"}],"key":"RQcas95Nyo"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"pr_diff = rg_list[0] - rg_list[1]\n\npr_diff.pr.plot(cmap=\"bwr\")\nplt.show()\n","visibility":"show","key":"MVi5lQhkXM"},{"type":"output","id":"HRjezFoWZLEIygcdu6dn_","data":[],"visibility":"show","key":"mSHQc6dEHe"}],"visibility":"show","key":"w3eLcuajrG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot everything together","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bhz1K5ukFm"}],"identifier":"plot-everything-together","label":"Plot everything together","html_id":"plot-everything-together","implicit":true,"key":"T9YC87rZNX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Plot the regridded precipitation data as well as the difference between models on the same figure. We can use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"uJyeGu0UtO"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CHc948bQeR"},{"type":"text","value":" to make it pretty. With ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SNuaxGIJez"},{"type":"inlineCode","value":"GridSpec","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IUoevuAgq1"},{"type":"text","value":", we can also split up the figure and organize it to use the same colorbar for more than one panel.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XXk7o4OLoe"}],"key":"ChOvkShDTo"}],"key":"BrvecxI4s0"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], hspace=0.2)\n\n# specify the projection\nproj = ccrs.Mollweide()\n\n# set up plots for each model\naxpr_1 = plt.subplot(gs[0, 0], projection=proj)\naxpr_2 = plt.subplot(gs[1, 0], projection=proj)\naxdiff = plt.subplot(gs[2, 0], projection=proj)\n\n# axes where the colorbar will go \naxcb_pr = plt.subplot(gs[:2, 1]) \naxcb_diff = plt.subplot(gs[2, 1])\naxcb_pr.axis(\"off\")\naxcb_diff.axis(\"off\")\n\n# plot the precipitation for both models\nfor i, ax in enumerate([axpr_1, axpr_2]):\n    ds_rg = rg_list[i]\n    pcm = ax.pcolormesh(ds_rg.lon, ds_rg.lat, ds_rg.pr.isel(time=0), norm=mcolors.LogNorm(vmin=1e-7, vmax=3e-4),\n                         transform=ccrs.PlateCarree()\n                       )\n    ax.set_title(ds_rg.parent_source_id)\n    ax.add_feature(cfeature.COASTLINE)\n    \n# now plot the difference\npcmd = axdiff.pcolormesh(pr_diff.lon, pr_diff.lat, pr_diff.pr.isel(time=0), cmap=\"bwr\", vmin=-3e-4, vmax=3e-4,\n                         transform=ccrs.PlateCarree()\n                        )\naxdiff.set_title(\"{a} - {b}\".format(a=rg_list[0].parent_source_id, b=rg_list[1].parent_source_id))\naxdiff.add_feature(cfeature.COASTLINE)\n\n# set the precipitation colorbar\naxcb_pr_ins = inset_axes(axcb_pr, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar_pr = plt.colorbar(pcm, cax=axcb_pr_ins, orientation=\"vertical\", extend=\"both\")\ncbar_pr.set_label(\"{n} ({u})\".format(n=rg_list[0].pr.long_name, u=rg_list[0].pr.units))\n\n# set the difference colorbar\naxcb_diff_ins = inset_axes(axcb_diff, width=\"50%\", height=\"100%\", loc=\"center\")\ncbar_diff = plt.colorbar(pcmd, cax=axcb_diff_ins, orientation=\"vertical\", extend=\"both\")\ncbar_diff.set_label(\"Difference ({u})\".format(u=pr_diff.pr.units))\n\nplt.show()\n","visibility":"show","key":"u85hqSAutG"},{"type":"output","id":"8DnBQWKoJcxrtflsgh4Uj","data":[],"visibility":"show","key":"Q1W3lWy3o6"}],"visibility":"show","key":"tW9xGTSpby"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 2: Coarsen the output for one model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eHZkB6vmJz"}],"identifier":"example-2-coarsen-the-output-for-one-model","label":"Example 2: Coarsen the output for one model","html_id":"example-2-coarsen-the-output-for-one-model","implicit":true,"key":"VilwQ0Pecv"}],"visibility":"show","key":"ULEQaLcT9r"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g2KNCrCjfT"},{"type":"inlineCode","value":"Rooki","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BOq6nlMtEJ"},{"type":"text","value":" to regrid the data from one model onto a coarser grid. In this case, it may make more sense to use a conservative regridding method, which will conserve the physical fluxes between grid cells, rather than the nearest neighbors method we used in Example 1.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lk5CuSUeKG"}],"key":"RpaxaXBw9a"}],"key":"LH9z4X1x9o"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get the data using intake-esgf and Rooki again","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vRjQDtDsWz"}],"identifier":"get-the-data-using-intake-esgf-and-rooki-again","label":"Get the data using intake-esgf and Rooki again","html_id":"get-the-data-using-intake-esgf-and-rooki-again","implicit":true,"key":"Oh491mcsVI"}],"key":"wwfkeLTP52"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we’ll look at the annual mean near-surface air temperature for CESM2 in 2010.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xJuGuwKsJ4"}],"key":"ozzpbEnpn1"}],"key":"gxjmcAXnMB"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cat = ESGFCatalog()\ncat.search(\n        activity_id='CMIP',\n        experiment_id=[\"historical\",],\n        variable_id=[\"tas\"],\n        member_id='r1i1p1f1',\n        grid_label='gn',\n        table_id=\"Amon\",\n        source_id = [ \"CESM2\"]\n    )\n\ndsets = [separate_dataset_id(dataset) for dataset in list(cat.df.id.values)]\ndsets\n","visibility":"show","key":"EHuNKVujlG"},{"type":"output","id":"9VMOhQs05aYdB8iosiZu7","data":[],"visibility":"show","key":"DbdD8vIGEN"}],"visibility":"show","key":"O8pEulG4vs"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, get the dataset with the original grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YPPYNHSiKq"}],"key":"Bgyot01CpP"}],"key":"kdXqdWEntg"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Subset(\n        ops.Input('tas', [dsets[0]]),\n        time='2010/2010'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_og = resp.datasets()[0]\nelse:\n    print(resp.status)\n","visibility":"show","key":"qguyTrHN7J"},{"type":"output","id":"syXpeYo5i8xETnHjGXY1x","data":[],"visibility":"show","key":"jGUOcd0I4N"}],"visibility":"show","key":"Izb3y7ktRw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BvBFYrebwy"},{"type":"inlineCode","value":".grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DIVJ6ILow5"},{"type":"text","value":" attribute to get information on the native grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gb6ZHuHjAr"}],"key":"IX2fKPyUl4"}],"key":"LPHSx0TGoQ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_og.grid","visibility":"show","key":"sbNaWHHSUD"},{"type":"output","id":"rWxdEW_k22Gkv7ZNtsuo-","data":[],"visibility":"show","key":"rdMSER4wwi"}],"visibility":"show","key":"V60B3pgrbE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The native grid is 0.9°x1.25°, so let’s try coarsening to a 1.25°x1.25° grid using the conservative method:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NXVIAWIhld"}],"key":"RA51SNXFZS"}],"key":"jyvQh0UtQl"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='1pt25deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_125 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"zpSYp7gcC9"},{"type":"output","id":"8Ze3xYoZZcDDO6ElcUWKn","data":[],"visibility":"show","key":"tSyjcb68HL"}],"visibility":"show","key":"R9YmjYFY7j"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_125.grid","visibility":"show","key":"PMf2x4OB4c"},{"type":"output","id":"3KPtuAOBq7Z03bTqXc4N9","data":[],"visibility":"show","key":"vBusidmvdh"}],"visibility":"show","key":"Feiub9F5Mb"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also make it even coarser by regridding to a 2.5°x2.5° grid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CrMpGC3Ky7"}],"key":"P18t9u6fIm"}],"key":"vaJWsYwvWr"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"wf = ops.AverageByTime(\n    ops.Regrid(\n        ops.Subset(\n            ops.Input('tas', [dsets[0]]),\n            time='2010/2010'\n        ),\n        method='conservative',\n        grid='2pt5deg'\n    )\n)\n\nresp = wf.orchestrate()\n\nif resp.ok:\n    ds_25 = resp.datasets()[0]\nelse:\n    print(resp.status)\n    ","visibility":"show","key":"bewaIpIEO3"},{"type":"output","id":"ZoIYgaNByLZhdb1fHDgsB","data":[],"visibility":"show","key":"YpKUnkmdJ0"}],"visibility":"show","key":"HAW92cJDFN"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_25.grid","visibility":"show","key":"i1UBiENyeq"},{"type":"output","id":"rizCcHY9zpQgfq6Xkaq5b","data":[],"visibility":"show","key":"BeXtc5VQQd"}],"visibility":"show","key":"CoPOfuwMCz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot each dataset to look at the coarsened grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FY8afcIt1O"}],"identifier":"plot-each-dataset-to-look-at-the-coarsened-grids","label":"Plot each dataset to look at the coarsened grids","html_id":"plot-each-dataset-to-look-at-the-coarsened-grids","implicit":true,"key":"NrC7l0NVpQ"}],"key":"IVzSFhYNcu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Make a quick plot first:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hN2sUmnwxl"}],"key":"bWYRkrwETG"}],"key":"aJ2yi58HXH"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for ds in [ds_og, ds_125, ds_25]:\n    ds[\"tas\"].plot()\n    plt.show()\n    ","visibility":"show","key":"U7RP4HW9lj"},{"type":"output","id":"RAF1J_sDusjrbM-x0YNCZ","data":[],"visibility":"show","key":"WVX83VygmD"}],"visibility":"show","key":"NkImO8e15t"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the coarsened datsets together using Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HufrRBbVgR"}],"identifier":"plot-the-coarsened-datsets-together-using-cartopy","label":"Plot the coarsened datsets together using Cartopy","html_id":"plot-the-coarsened-datsets-together-using-cartopy","implicit":true,"key":"g2ZNgXXdtZ"}],"key":"Xk8gcqU99d"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now let’s zoom in on a smaller region, the continental US, to get a clear view of the difference in grid resolution. Here we can also decrease the colorbar limits to better see how the variable ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xOhcjeKWWv"},{"type":"inlineCode","value":"tas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nEtGV3gWJR"},{"type":"text","value":" varies within the smaller region.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"biM8cT37bM"}],"key":"LJ1lEcFXUU"}],"visibility":"show","key":"FIM0Nwytr6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# set up the figure\nfig = plt.figure(figsize=(6, 8))\ngs = GridSpec(3, 2, width_ratios=[1, 0.1], height_ratios=[1, 1, 1], hspace=0.3, wspace=0.2)\n\n# specify the projection\nproj = ccrs.PlateCarree()\n\n# set up plot axes\nax1 = plt.subplot(gs[0, 0], projection=proj)\nax2 = plt.subplot(gs[1, 0], projection=proj)\nax3 = plt.subplot(gs[2, 0], projection=proj)\naxes_list = [ax1, ax2, ax3]\n\n# set up colorbar axis\naxcb = plt.subplot(gs[:, 1])\n\n# loop through each dataset and its corresponding axis\nfor i, dset in enumerate([ds_og, ds_125, ds_25]):\n    plot_ds = dset.tas.isel(time=0)\n    ax = axes_list[i]\n    pcm = ax.pcolormesh(plot_ds.lon, plot_ds.lat, plot_ds, vmin=270, vmax=302.5, transform=proj)\n    \n    # add borders and coastlines\n    ax.add_feature(cfeature.BORDERS)\n    ax.coastlines()\n    \n    # limit to CONUS for this example\n    ax.set_xlim(-130, -60)\n    ax.set_ylim(22, 52)\n    \n    # add grid labels on bottom & left only\n    gl = ax.gridlines(color=\"None\", draw_labels=True)\n    gl.top_labels = False\n    gl.right_labels = False\n    \n    # label with the regrid type; if it fails, that means it hasn't been regridded\n    # (so label with the grid attribute instead)\n    try:\n        ax.set_title(dset.regrid_operation)\n    except:\n        ax.set_title(dset.grid)\n        \n# use the same colorbar for all plots\naxcb.axis(\"off\")\naxcb_ins = inset_axes(axcb, width=\"50%\", height=\"75%\", loc=\"center\")\ncbar = plt.colorbar(pcm, cax=axcb_ins, orientation=\"vertical\", extend=\"both\")\ncbar.set_label(\"{n} ({u})\".format(n=plot_ds.long_name, u=plot_ds.units))\n        \nplt.show()\n","visibility":"show","key":"pxtmoSvHHC"},{"type":"output","id":"zl_L7iD9P99EfyYVkO6dz","data":[],"visibility":"show","key":"AcTZLntOHm"}],"visibility":"show","key":"uTwJda3hSv"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"olgakU27uh"}],"key":"MlTQqURiIE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oDZhsQhRsN"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"ExTWVLTyAx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"Rooki","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zYQTA2wAcP"},{"type":"text","value":" offers a quick and easy way to regrid CMIP model data that can be located using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AMun9n220k"},{"type":"inlineCode","value":"intake-esgf","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fjHhNEVvft"},{"type":"text","value":". ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"e6YmJB9KKW"},{"type":"inlineCode","value":"Cartopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SSFTx5ML1h"},{"type":"text","value":" lets us easily customize the plot to neatly display the geospatial data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HoIQwtIWnl"}],"key":"QORWOesmbx"}],"key":"mG6Dljmol4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eS355v8qRs"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"ov1Wkwc7rz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Regridding overview from NCAR","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HAtVS7JypN"}],"urlSource":"https://climatedataguide.ucar.edu/climate-tools/regridding-overview","key":"efKJ7m2ULv"},{"type":"text","value":", including descriptions of various regridding methods","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"S3QqXRNIww"}],"key":"iOkJ1Mcxib"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Rooki regridding example notebook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZkwctpvtaI"}],"urlSource":"https://github.com/roocs/rooki/blob/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb","data":{"kind":"file","org":"roocs","repo":"rooki","reference":"master","file":"notebooks/demo/demo-rooki-regrid-cmip6.ipynb","raw":"https://raw.githubusercontent.com/roocs/rooki/master/notebooks/demo/demo-rooki-regrid-cmip6.ipynb"},"internal":false,"protocol":"github","key":"pXSVgY3H8R"}],"key":"ubVwizE3Z0"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Rooki documentation","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kBbNQ3glJC"}],"urlSource":"https://rooki.readthedocs.io/en/latest/","key":"J0BWY9hNYu"}],"key":"IQsRbjRH6N"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Cartopy logo image source","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MBhyiH3FgV"}],"urlSource":"https://scitools.org.uk/cartopy/docs/v0.16/gallery/logo.html","key":"OglEu3zVmr"}],"key":"XWmp6BiXDN"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://rooki.readthedocs.io/en/latest/#","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Rooki logo image source","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ODfZlkVQTm"}],"urlSource":"https://rooki.readthedocs.io/en/latest/#","key":"nqxJ4rX45A"}],"key":"n9LEipoqEQ"}],"key":"Eb2iSAPOs3"}],"key":"P6bHlMLAup"}],"key":"INio9G5WLW"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compute Demo: ENSO nonlinearity index with CMIP6 data","url":"/notebooks/rooki-enso-nonlinear","group":"Workflows"},"next":{"title":"Complex Searching with intake and analysing employing xarray","url":"/notebooks/complex-search2-and-analysis","group":"Workflows"}}},"domain":"http://localhost:3000"}